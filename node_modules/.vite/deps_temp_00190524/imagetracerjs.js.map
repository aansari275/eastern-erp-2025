{
  "version": 3,
  "sources": ["../../imagetracerjs/imagetracer_v1.2.6.js"],
  "sourcesContent": ["/*\n\timagetracer.js version 1.2.6\n\tSimple raster image tracer and vectorizer written in JavaScript.\n\tandras@jankovics.net\n*/\n\n/*\n\nThe Unlicense / PUBLIC DOMAIN\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to http://unlicense.org/\n\n*/\n\n(function(){ 'use strict';\n\nfunction ImageTracer(){\n\tvar _this = this;\n\n\tthis.versionnumber = '1.2.6',\n\t\n\t////////////////////////////////////////////////////////////\n\t//\n\t//  API\n\t//\n\t////////////////////////////////////////////////////////////\n\t\n\t// Loading an image from a URL, tracing when loaded,\n\t// then executing callback with the scaled svg string as argument\n\tthis.imageToSVG = function( url, callback, options ){\n\t\toptions = _this.checkoptions(options);\n\t\t// loading image, tracing and callback\n\t\t_this.loadImage(\n\t\t\turl,\n\t\t\tfunction(canvas){\n\t\t\t\tcallback(\n\t\t\t\t\t_this.imagedataToSVG( _this.getImgdata(canvas), options )\n\t\t\t\t);\n\t\t\t},\n\t\t\toptions\n\t\t);\n\t},// End of imageToSVG()\n\t\n\t// Tracing imagedata, then returning the scaled svg string\n\tthis.imagedataToSVG = function( imgd, options ){\n\t\toptions = _this.checkoptions(options);\n\t\t// tracing imagedata\n\t\tvar td = _this.imagedataToTracedata( imgd, options );\n\t\t// returning SVG string\n\t\treturn _this.getsvgstring(td, options);\n\t},// End of imagedataToSVG()\n\t\n\t// Loading an image from a URL, tracing when loaded,\n\t// then executing callback with tracedata as argument\n\tthis.imageToTracedata = function( url, callback, options ){\n\t\toptions = _this.checkoptions(options);\n\t\t// loading image, tracing and callback\n\t\t_this.loadImage(\n\t\t\t\turl,\n\t\t\t\tfunction(canvas){\n\t\t\t\t\tcallback(\n\t\t\t\t\t\t_this.imagedataToTracedata( _this.getImgdata(canvas), options )\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\toptions\n\t\t);\n\t},// End of imageToTracedata()\n\t\n\t// Tracing imagedata, then returning tracedata (layers with paths, palette, image size)\n\tthis.imagedataToTracedata = function( imgd, options ){\n\t\toptions = _this.checkoptions(options);\n\t\t\n\t\t// 1. Color quantization\n\t\tvar ii = _this.colorquantization( imgd, options );\n\t\t\n\t\tif(options.layering === 0){// Sequential layering\n\t\t\t\n\t\t\t// create tracedata object\n\t\t\tvar tracedata = {\n\t\t\t\tlayers : [],\n\t\t\t\tpalette : ii.palette,\n\t\t\t\twidth : ii.array[0].length-2,\n\t\t\t\theight : ii.array.length-2\n\t\t\t};\n\t\t\t\n\t\t\t// Loop to trace each color layer\n\t\t\tfor(var colornum=0; colornum<ii.palette.length; colornum++){\n\t\t\t\t\n\t\t\t\t// layeringstep -> pathscan -> internodes -> batchtracepaths\n\t\t\t\tvar tracedlayer =\n\t\t\t\t\t_this.batchtracepaths(\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t_this.internodes(\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t_this.pathscan(\n\t\t\t\t\t\t\t\t_this.layeringstep( ii, colornum ),\n\t\t\t\t\t\t\t\toptions.pathomit\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\n\t\t\t\t\t\toptions.ltres,\n\t\t\t\t\t\toptions.qtres\n\t\t\t\t\t\t\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t// adding traced layer\n\t\t\t\ttracedata.layers.push(tracedlayer);\n\t\t\t\t\n\t\t\t}// End of color loop\n\t\t\t\n\t\t}else{// Parallel layering\n\t\t\t// 2. Layer separation and edge detection\n\t\t\tvar ls = _this.layering( ii );\n\t\t\t\n\t\t\t// Optional edge node visualization\n\t\t\tif(options.layercontainerid){ _this.drawLayers( ls, _this.specpalette, options.scale, options.layercontainerid ); }\n\t\t\t\n\t\t\t// 3. Batch pathscan\n\t\t\tvar bps = _this.batchpathscan( ls, options.pathomit );\n\t\t\t\n\t\t\t// 4. Batch interpollation\n\t\t\tvar bis = _this.batchinternodes( bps, options );\n\t\t\t\n\t\t\t// 5. Batch tracing and creating tracedata object\n\t\t\tvar tracedata = {\n\t\t\t\tlayers : _this.batchtracelayers( bis, options.ltres, options.qtres ),\n\t\t\t\tpalette : ii.palette,\n\t\t\t\twidth : imgd.width,\n\t\t\t\theight : imgd.height\n\t\t\t};\n\t\t\t\n\t\t}// End of parallel layering\n\t\t\n\t\t// return tracedata\n\t\treturn tracedata;\n\t\t\n\t},// End of imagedataToTracedata()\n\t\n\tthis.optionpresets = {\n\t\t'default': {\n\t\t\t\n\t\t\t// Tracing\n\t\t\tcorsenabled : false,\n\t\t\tltres : 1,\n\t\t\tqtres : 1,\n\t\t\tpathomit : 8,\n\t\t\trightangleenhance : true,\n\t\t\t\n\t\t\t// Color quantization\n\t\t\tcolorsampling : 2,\n\t\t\tnumberofcolors : 16,\n\t\t\tmincolorratio : 0,\n\t\t\tcolorquantcycles : 3,\n\t\t\t\n\t\t\t// Layering method\n\t\t\tlayering : 0,\n\t\t\t\n\t\t\t// SVG rendering\n\t\t\tstrokewidth : 1,\n\t\t\tlinefilter : false,\n\t\t\tscale : 1,\n\t\t\troundcoords : 1,\n\t\t\tviewbox : false,\n\t\t\tdesc : false,\n\t\t\tlcpr : 0,\n\t\t\tqcpr : 0,\n\t\t\t\n\t\t\t// Blur\n\t\t\tblurradius : 0,\n\t\t\tblurdelta : 20\n\t\t\t\n\t\t},\n\t\t'posterized1': { colorsampling:0, numberofcolors:2 },\n\t\t'posterized2': { numberofcolors:4, blurradius:5 },\n\t\t'curvy': { ltres:0.01, linefilter:true, rightangleenhance:false },\n\t\t'sharp': { qtres:0.01, linefilter:false },\n\t\t'detailed': { pathomit:0, roundcoords:2, ltres:0.5, qtres:0.5, numberofcolors:64 },\n\t\t'smoothed': { blurradius:5, blurdelta: 64 },\n\t\t'grayscale': { colorsampling:0, colorquantcycles:1, numberofcolors:7 },\n\t\t'fixedpalette': { colorsampling:0, colorquantcycles:1, numberofcolors:27 },\n\t\t'randomsampling1': { colorsampling:1, numberofcolors:8 },\n\t\t'randomsampling2': { colorsampling:1, numberofcolors:64 },\n\t\t'artistic1': { colorsampling:0, colorquantcycles:1, pathomit:0, blurradius:5, blurdelta: 64, ltres:0.01, linefilter:true, numberofcolors:16, strokewidth:2 },\n\t\t'artistic2': { qtres:0.01, colorsampling:0, colorquantcycles:1, numberofcolors:4, strokewidth:0 },\n\t\t'artistic3': { qtres:10, ltres:10, numberofcolors:8 },\n\t\t'artistic4': { qtres:10, ltres:10, numberofcolors:64, blurradius:5, blurdelta: 256, strokewidth:2 },\n\t\t'posterized3': { ltres: 1, qtres: 1, pathomit: 20, rightangleenhance: true, colorsampling: 0, numberofcolors: 3,\n\t\t\tmincolorratio: 0, colorquantcycles: 3, blurradius: 3, blurdelta: 20, strokewidth: 0, linefilter: false,\n\t\t\troundcoords: 1, pal: [ { r: 0, g: 0, b: 100, a: 255 }, { r: 255, g: 255, b: 255, a: 255 } ] }\n\t},// End of optionpresets\n\t\n\t// creating options object, setting defaults for missing values\n\tthis.checkoptions = function(options){\n\t\toptions = options || {};\n\t\t// Option preset\n\t\tif(typeof options === 'string'){\n\t\t\toptions = options.toLowerCase();\n\t\t\tif( _this.optionpresets[options] ){ options = _this.optionpresets[options]; }else{ options = {}; }\n\t\t}\n\t\t// Defaults\n\t\tvar ok = Object.keys(_this.optionpresets['default']);\n\t\tfor(var k=0; k<ok.length; k++){\n\t\t\tif(!options.hasOwnProperty(ok[k])){ options[ok[k]] = _this.optionpresets['default'][ok[k]]; }\n\t\t}\n\t\t// options.pal is not defined here, the custom palette should be added externally: options.pal = [ { 'r':0, 'g':0, 'b':0, 'a':255 }, {...}, ... ];\n\t\t// options.layercontainerid is not defined here, can be added externally: options.layercontainerid = 'mydiv'; ... <div id=\"mydiv\"></div>\n\t\treturn options;\n\t},// End of checkoptions()\n\t\n\t////////////////////////////////////////////////////////////\n\t//\n\t//  Vectorizing functions\n\t//\n\t////////////////////////////////////////////////////////////\n\t\n\t// 1. Color quantization\n\t// Using a form of k-means clustering repeatead options.colorquantcycles times. http://en.wikipedia.org/wiki/Color_quantization\n\tthis.colorquantization = function( imgd, options ){\n\t\tvar arr = [], idx=0, cd,cdl,ci, paletteacc = [], pixelnum = imgd.width * imgd.height, i, j, k, cnt, palette;\n\t\t\n\t\t// imgd.data must be RGBA, not just RGB\n\t\tif( imgd.data.length < pixelnum * 4 ){\n\t\t\tvar newimgddata = new Uint8ClampedArray(pixelnum * 4);\n\t\t\tfor(var pxcnt = 0; pxcnt < pixelnum ; pxcnt++){\n\t\t\t\tnewimgddata[pxcnt*4  ] = imgd.data[pxcnt*3  ];\n\t\t\t\tnewimgddata[pxcnt*4+1] = imgd.data[pxcnt*3+1];\n\t\t\t\tnewimgddata[pxcnt*4+2] = imgd.data[pxcnt*3+2];\n\t\t\t\tnewimgddata[pxcnt*4+3] = 255;\n\t\t\t}\n\t\t\timgd.data = newimgddata;\n\t\t}// End of RGBA imgd.data check\n\t\t\n\t\t// Filling arr (color index array) with -1\n\t\tfor( j=0; j<imgd.height+2; j++ ){ arr[j]=[]; for(i=0; i<imgd.width+2 ; i++){ arr[j][i] = -1; } }\n\t\t\n\t\t// Use custom palette if pal is defined or sample / generate custom length palette\n\t\tif(options.pal){\n\t\t\tpalette = options.pal;\n\t\t}else if(options.colorsampling === 0){\n\t\t\tpalette = _this.generatepalette(options.numberofcolors);\n\t\t}else if(options.colorsampling === 1){\n\t\t\tpalette = _this.samplepalette( options.numberofcolors, imgd );\n\t\t}else{\n\t\t\tpalette = _this.samplepalette2( options.numberofcolors, imgd );\n\t\t}\n\t\t\n\t\t// Selective Gaussian blur preprocessing\n\t\tif( options.blurradius > 0 ){ imgd = _this.blur( imgd, options.blurradius, options.blurdelta ); }\n\t\t\n\t\t// Repeat clustering step options.colorquantcycles times\n\t\tfor( cnt=0; cnt < options.colorquantcycles; cnt++ ){\n\t\t\t\n\t\t\t// Average colors from the second iteration\n\t\t\tif(cnt>0){\n\t\t\t\t// averaging paletteacc for palette\n\t\t\t\tfor( k=0; k < palette.length; k++ ){\n\t\t\t\t\t\n\t\t\t\t\t// averaging\n\t\t\t\t\tif( paletteacc[k].n > 0 ){\n\t\t\t\t\t\tpalette[k] = {  r: Math.floor( paletteacc[k].r / paletteacc[k].n ),\n\t\t\t\t\t\t\t\t\t\tg: Math.floor( paletteacc[k].g / paletteacc[k].n ),\n\t\t\t\t\t\t\t\t\t\tb: Math.floor( paletteacc[k].b / paletteacc[k].n ),\n\t\t\t\t\t\t\t\t\t\ta:  Math.floor( paletteacc[k].a / paletteacc[k].n ) };\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Randomizing a color, if there are too few pixels and there will be a new cycle\n\t\t\t\t\tif( ( paletteacc[k].n/pixelnum < options.mincolorratio ) && ( cnt < options.colorquantcycles-1 ) ){\n\t\t\t\t\t\tpalette[k] = {  r: Math.floor(Math.random()*255),\n\t\t\t\t\t\t\t\t\t\tg: Math.floor(Math.random()*255),\n\t\t\t\t\t\t\t\t\t\tb: Math.floor(Math.random()*255),\n\t\t\t\t\t\t\t\t\t\ta: Math.floor(Math.random()*255) };\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}// End of palette loop\n\t\t\t}// End of Average colors from the second iteration\n\t\t\t\n\t\t\t// Reseting palette accumulator for averaging\n\t\t\tfor( i=0; i < palette.length; i++ ){ paletteacc[i] = { r:0, g:0, b:0, a:0, n:0 }; }\n\t\t\t\n\t\t\t// loop through all pixels\n\t\t\tfor( j=0; j < imgd.height; j++ ){\n\t\t\t\tfor( i=0; i < imgd.width; i++ ){\n\t\t\t\t\t\n\t\t\t\t\t// pixel index\n\t\t\t\t\tidx = (j*imgd.width+i)*4;\n\t\t\t\t\t\n\t\t\t\t\t// find closest color from palette by measuring (rectilinear) color distance between this pixel and all palette colors\n\t\t\t\t\tci=0; cdl = 1024; // 4 * 256 is the maximum RGBA distance\n\t\t\t\t\tfor( k=0; k<palette.length; k++ ){\n\t\t\t\t\t\t\n\t\t\t\t\t\t// In my experience, https://en.wikipedia.org/wiki/Rectilinear_distance works better than https://en.wikipedia.org/wiki/Euclidean_distance\n\t\t\t\t\t\tcd = Math.abs(palette[k].r-imgd.data[idx]) + Math.abs(palette[k].g-imgd.data[idx+1]) + Math.abs(palette[k].b-imgd.data[idx+2]) + Math.abs(palette[k].a-imgd.data[idx+3]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remember this color if this is the closest yet\n\t\t\t\t\t\tif(cd<cdl){ cdl = cd; ci = k; }\n\t\t\t\t\t\t\n\t\t\t\t\t}// End of palette loop\n\t\t\t\t\t\n\t\t\t\t\t// add to palettacc\n\t\t\t\t\tpaletteacc[ci].r += imgd.data[idx  ];\n\t\t\t\t\tpaletteacc[ci].g += imgd.data[idx+1];\n\t\t\t\t\tpaletteacc[ci].b += imgd.data[idx+2];\n\t\t\t\t\tpaletteacc[ci].a += imgd.data[idx+3];\n\t\t\t\t\tpaletteacc[ci].n++;\n\t\t\t\t\t\n\t\t\t\t\t// update the indexed color array\n\t\t\t\t\tarr[j+1][i+1] = ci;\n\t\t\t\t\t\n\t\t\t\t}// End of i loop\n\t\t\t}// End of j loop\n\t\t\t\n\t\t}// End of Repeat clustering step options.colorquantcycles times\n\t\t\n\t\treturn { array:arr, palette:palette };\n\t\t\n\t},// End of colorquantization()\n\t\n\t// Sampling a palette from imagedata\n\tthis.samplepalette = function( numberofcolors, imgd ){\n\t\tvar idx, palette=[];\n\t\tfor(var i=0; i<numberofcolors; i++){\n\t\t\tidx = Math.floor( Math.random() * imgd.data.length / 4 ) * 4;\n\t\t\tpalette.push({ r:imgd.data[idx  ], g:imgd.data[idx+1], b:imgd.data[idx+2], a:imgd.data[idx+3] });\n\t\t}\n\t\treturn palette;\n\t},// End of samplepalette()\n\t\n\t// Deterministic sampling a palette from imagedata: rectangular grid\n\tthis.samplepalette2 = function( numberofcolors, imgd ){\n\t\tvar idx, palette=[], ni = Math.ceil(Math.sqrt(numberofcolors)), nj = Math.ceil(numberofcolors/ni),\n\t\t\tvx = imgd.width / (ni+1), vy = imgd.height / (nj+1);\n\t\tfor(var j=0; j<nj; j++){\n\t\t\tfor(var i=0; i<ni; i++){\n\t\t\t\tif(palette.length === numberofcolors){\n\t\t\t\t\tbreak;\n\t\t\t\t}else{\n\t\t\t\t\tidx = Math.floor( ((j+1)*vy) * imgd.width + ((i+1)*vx) ) * 4;\n\t\t\t\t\tpalette.push( { r:imgd.data[idx], g:imgd.data[idx+1], b:imgd.data[idx+2], a:imgd.data[idx+3] } );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn palette;\n\t},// End of samplepalette2()\n\t\n\t// Generating a palette with numberofcolors\n\tthis.generatepalette = function(numberofcolors){\n\t\tvar palette = [], rcnt, gcnt, bcnt;\n\t\tif(numberofcolors<8){\n\t\t\t\n\t\t\t// Grayscale\n\t\t\tvar graystep = Math.floor(255/(numberofcolors-1));\n\t\t\tfor(var i=0; i<numberofcolors; i++){ palette.push({ r:i*graystep, g:i*graystep, b:i*graystep, a:255 }); }\n\t\t\t\n\t\t}else{\n\t\t\t\n\t\t\t// RGB color cube\n\t\t\tvar colorqnum = Math.floor(Math.pow(numberofcolors, 1/3)), // Number of points on each edge on the RGB color cube\n\t\t\t\tcolorstep = Math.floor(255/(colorqnum-1)), // distance between points\n\t\t\t\trndnum = numberofcolors - colorqnum*colorqnum*colorqnum; // number of random colors\n\t\t\t\n\t\t\tfor(rcnt=0; rcnt<colorqnum; rcnt++){\n\t\t\t\tfor(gcnt=0; gcnt<colorqnum; gcnt++){\n\t\t\t\t\tfor(bcnt=0; bcnt<colorqnum; bcnt++){\n\t\t\t\t\t\tpalette.push( { r:rcnt*colorstep, g:gcnt*colorstep, b:bcnt*colorstep, a:255 } );\n\t\t\t\t\t}// End of blue loop\n\t\t\t\t}// End of green loop\n\t\t\t}// End of red loop\n\t\t\t\n\t\t\t// Rest is random\n\t\t\tfor(rcnt=0; rcnt<rndnum; rcnt++){ palette.push({ r:Math.floor(Math.random()*255), g:Math.floor(Math.random()*255), b:Math.floor(Math.random()*255), a:Math.floor(Math.random()*255) }); }\n\n\t\t}// End of numberofcolors check\n\t\t\n\t\treturn palette;\n\t},// End of generatepalette()\n\t\t\n\t// 2. Layer separation and edge detection\n\t// Edge node types ( ▓: this layer or 1; ░: not this layer or 0 )\n\t// 12  ░░  ▓░  ░▓  ▓▓  ░░  ▓░  ░▓  ▓▓  ░░  ▓░  ░▓  ▓▓  ░░  ▓░  ░▓  ▓▓\n\t// 48  ░░  ░░  ░░  ░░  ░▓  ░▓  ░▓  ░▓  ▓░  ▓░  ▓░  ▓░  ▓▓  ▓▓  ▓▓  ▓▓\n\t//     0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15\n\tthis.layering = function(ii){\n\t\t// Creating layers for each indexed color in arr\n\t\tvar layers = [], val=0, ah = ii.array.length, aw = ii.array[0].length, n1,n2,n3,n4,n5,n6,n7,n8, i, j, k;\n\t\t\n\t\t// Create layers\n\t\tfor(k=0; k<ii.palette.length; k++){\n\t\t\tlayers[k] = [];\n\t\t\tfor(j=0; j<ah; j++){\n\t\t\t\tlayers[k][j] = [];\n\t\t\t\tfor(i=0; i<aw; i++){\n\t\t\t\t\tlayers[k][j][i]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Looping through all pixels and calculating edge node type\n\t\tfor(j=1; j<ah-1; j++){\n\t\t\tfor(i=1; i<aw-1; i++){\n\t\t\t\t\n\t\t\t\t// This pixel's indexed color\n\t\t\t\tval = ii.array[j][i];\n\t\t\t\t\n\t\t\t\t// Are neighbor pixel colors the same?\n\t\t\t\tn1 = ii.array[j-1][i-1]===val ? 1 : 0;\n\t\t\t\tn2 = ii.array[j-1][i  ]===val ? 1 : 0;\n\t\t\t\tn3 = ii.array[j-1][i+1]===val ? 1 : 0;\n\t\t\t\tn4 = ii.array[j  ][i-1]===val ? 1 : 0;\n\t\t\t\tn5 = ii.array[j  ][i+1]===val ? 1 : 0;\n\t\t\t\tn6 = ii.array[j+1][i-1]===val ? 1 : 0;\n\t\t\t\tn7 = ii.array[j+1][i  ]===val ? 1 : 0;\n\t\t\t\tn8 = ii.array[j+1][i+1]===val ? 1 : 0;\n\t\t\t\t\n\t\t\t\t// this pixel's type and looking back on previous pixels\n\t\t\t\tlayers[val][j+1][i+1] = 1 + n5 * 2 + n8 * 4 + n7 * 8 ;\n\t\t\t\tif(!n4){ layers[val][j+1][i  ] = 0 + 2 + n7 * 4 + n6 * 8 ; }\n\t\t\t\tif(!n2){ layers[val][j  ][i+1] = 0 + n3*2 + n5 * 4 + 8 ; }\n\t\t\t\tif(!n1){ layers[val][j  ][i  ] = 0 + n2*2 + 4 + n4 * 8 ; }\n\t\t\t\t\n\t\t\t}// End of i loop\n\t\t}// End of j loop\n\t\t\n\t\treturn layers;\n\t},// End of layering()\n\t\n\t// 2. Layer separation and edge detection\n\t// Edge node types ( ▓: this layer or 1; ░: not this layer or 0 )\n\t// 12  ░░  ▓░  ░▓  ▓▓  ░░  ▓░  ░▓  ▓▓  ░░  ▓░  ░▓  ▓▓  ░░  ▓░  ░▓  ▓▓\n\t// 48  ░░  ░░  ░░  ░░  ░▓  ░▓  ░▓  ░▓  ▓░  ▓░  ▓░  ▓░  ▓▓  ▓▓  ▓▓  ▓▓\n\t//     0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15\n\tthis.layeringstep = function(ii,cnum){\n\t\t// Creating layers for each indexed color in arr\n\t\tvar layer = [], val=0, ah = ii.array.length, aw = ii.array[0].length, n1,n2,n3,n4,n5,n6,n7,n8, i, j, k;\n\t\t\n\t\t// Create layer\n\t\tfor(j=0; j<ah; j++){\n\t\t\tlayer[j] = [];\n\t\t\tfor(i=0; i<aw; i++){\n\t\t\t\tlayer[j][i]=0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Looping through all pixels and calculating edge node type\n\t\tfor(j=1; j<ah; j++){\n\t\t\tfor(i=1; i<aw; i++){\n\t\t\t\tlayer[j][i] =\n\t\t\t\t\t( ii.array[j-1][i-1]===cnum ? 1 : 0 ) +\n\t\t\t\t\t( ii.array[j-1][i]===cnum ? 2 : 0 ) +\n\t\t\t\t\t( ii.array[j][i-1]===cnum ? 8 : 0 ) +\n\t\t\t\t\t( ii.array[j][i]===cnum ? 4 : 0 )\n\t\t\t\t;\n\t\t\t}// End of i loop\n\t\t}// End of j loop\n\t\t\t\n\t\treturn layer;\n\t},// End of layeringstep()\n\t\n\t// Point in polygon test\n\tthis.pointinpoly = function( p, pa ){\n\t\tvar isin=false;\n\n\t\tfor(var i=0,j=pa.length-1; i<pa.length; j=i++){\n\t\t\tisin =\n\t\t\t\t( ((pa[i].y > p.y) !== (pa[j].y > p.y)) && (p.x < (pa[j].x - pa[i].x) * (p.y - pa[i].y) / (pa[j].y - pa[i].y) + pa[i].x) )\n\t\t\t\t? !isin : isin;\n\t\t}\n\n\t\treturn isin;\n\t},\n\t\n\t// Lookup tables for pathscan\n\t// pathscan_combined_lookup[ arr[py][px] ][ dir ] = [nextarrpypx, nextdir, deltapx, deltapy];\n\tthis.pathscan_combined_lookup = [\n\t\t[[-1,-1,-1,-1], [-1,-1,-1,-1], [-1,-1,-1,-1], [-1,-1,-1,-1]],// arr[py][px]===0 is invalid\n\t\t[[ 0, 1, 0,-1], [-1,-1,-1,-1], [-1,-1,-1,-1], [ 0, 2,-1, 0]],\n\t\t[[-1,-1,-1,-1], [-1,-1,-1,-1], [ 0, 1, 0,-1], [ 0, 0, 1, 0]],\n\t\t[[ 0, 0, 1, 0], [-1,-1,-1,-1], [ 0, 2,-1, 0], [-1,-1,-1,-1]],\n\t\t\n\t\t[[-1,-1,-1,-1], [ 0, 0, 1, 0], [ 0, 3, 0, 1], [-1,-1,-1,-1]],\n\t\t[[13, 3, 0, 1], [13, 2,-1, 0], [ 7, 1, 0,-1], [ 7, 0, 1, 0]],\n\t\t[[-1,-1,-1,-1], [ 0, 1, 0,-1], [-1,-1,-1,-1], [ 0, 3, 0, 1]],\n\t\t[[ 0, 3, 0, 1], [ 0, 2,-1, 0], [-1,-1,-1,-1], [-1,-1,-1,-1]],\n\t\t\n\t\t[[ 0, 3, 0, 1], [ 0, 2,-1, 0], [-1,-1,-1,-1], [-1,-1,-1,-1]],\n\t\t[[-1,-1,-1,-1], [ 0, 1, 0,-1], [-1,-1,-1,-1], [ 0, 3, 0, 1]],\n\t\t[[11, 1, 0,-1], [14, 0, 1, 0], [14, 3, 0, 1], [11, 2,-1, 0]],\n\t\t[[-1,-1,-1,-1], [ 0, 0, 1, 0], [ 0, 3, 0, 1], [-1,-1,-1,-1]],\n\t\t\n\t\t[[ 0, 0, 1, 0], [-1,-1,-1,-1], [ 0, 2,-1, 0], [-1,-1,-1,-1]],\n\t\t[[-1,-1,-1,-1], [-1,-1,-1,-1], [ 0, 1, 0,-1], [ 0, 0, 1, 0]],\n\t\t[[ 0, 1, 0,-1], [-1,-1,-1,-1], [-1,-1,-1,-1], [ 0, 2,-1, 0]],\n\t\t[[-1,-1,-1,-1], [-1,-1,-1,-1], [-1,-1,-1,-1], [-1,-1,-1,-1]]// arr[py][px]===15 is invalid\n\t],\n\n\t// 3. Walking through an edge node array, discarding edge node types 0 and 15 and creating paths from the rest.\n\t// Walk directions (dir): 0 > ; 1 ^ ; 2 < ; 3 v \n\tthis.pathscan = function( arr, pathomit ){\n\t\tvar paths=[], pacnt=0, pcnt=0, px=0, py=0, w = arr[0].length, h = arr.length,\n\t\t\tdir=0, pathfinished=true, holepath=false, lookuprow;\n\t\t\n\t\tfor(var j=0; j<h; j++){\n\t\t\tfor(var i=0; i<w; i++){\n\t\t\t\tif( (arr[j][i] == 4) || ( arr[j][i] == 11) ){ // Other values are not valid\n\t\t\t\t\t\n\t\t\t\t\t// Init\n\t\t\t\t\tpx = i; py = j;\n\t\t\t\t\tpaths[pacnt] = {};\n\t\t\t\t\tpaths[pacnt].points = [];\n\t\t\t\t\tpaths[pacnt].boundingbox = [px,py,px,py];\n\t\t\t\t\tpaths[pacnt].holechildren = [];\n\t\t\t\t\tpathfinished = false;\n\t\t\t\t\tpcnt=0;\n\t\t\t\t\tholepath = (arr[j][i]==11);\n\t\t\t\t\tdir = 1;\n\n\t\t\t\t\t// Path points loop\n\t\t\t\t\twhile(!pathfinished){\n\t\t\t\t\t\t\n\t\t\t\t\t\t// New path point\n\t\t\t\t\t\tpaths[pacnt].points[pcnt] = {};\n\t\t\t\t\t\tpaths[pacnt].points[pcnt].x = px-1;\n\t\t\t\t\t\tpaths[pacnt].points[pcnt].y = py-1;\n\t\t\t\t\t\tpaths[pacnt].points[pcnt].t = arr[py][px];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Bounding box\n\t\t\t\t\t\tif( (px-1) < paths[pacnt].boundingbox[0] ){ paths[pacnt].boundingbox[0] = px-1; }\n\t\t\t\t\t\tif( (px-1) > paths[pacnt].boundingbox[2] ){ paths[pacnt].boundingbox[2] = px-1; }\n\t\t\t\t\t\tif( (py-1) < paths[pacnt].boundingbox[1] ){ paths[pacnt].boundingbox[1] = py-1; }\n\t\t\t\t\t\tif( (py-1) > paths[pacnt].boundingbox[3] ){ paths[pacnt].boundingbox[3] = py-1; }\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Next: look up the replacement, direction and coordinate changes = clear this cell, turn if required, walk forward\n\t\t\t\t\t\tlookuprow = _this.pathscan_combined_lookup[ arr[py][px] ][ dir ];\n\t\t\t\t\t\tarr[py][px] = lookuprow[0]; dir = lookuprow[1]; px += lookuprow[2]; py += lookuprow[3];\n\n\t\t\t\t\t\t// Close path\n\t\t\t\t\t\tif( (px-1 === paths[pacnt].points[0].x ) && ( py-1 === paths[pacnt].points[0].y ) ){\n\t\t\t\t\t\t\tpathfinished = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Discarding paths shorter than pathomit\n\t\t\t\t\t\t\tif( paths[pacnt].points.length < pathomit ){\n\t\t\t\t\t\t\t\tpaths.pop();\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpaths[pacnt].isholepath = holepath ? true : false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Finding the parent shape for this hole\n\t\t\t\t\t\t\t\tif(holepath){\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar parentidx = 0, parentbbox = [-1,-1,w+1,h+1];\n\t\t\t\t\t\t\t\t\tfor(var parentcnt=0; parentcnt < pacnt; parentcnt++){\n\t\t\t\t\t\t\t\t\t\tif( (!paths[parentcnt].isholepath) &&\n\t\t\t\t\t\t\t\t\t\t\t_this.boundingboxincludes( paths[parentcnt].boundingbox , paths[pacnt].boundingbox ) &&\n\t\t\t\t\t\t\t\t\t\t\t_this.boundingboxincludes( parentbbox , paths[parentcnt].boundingbox ) &&\n\t\t\t\t\t\t\t\t\t\t\t_this.pointinpoly( paths[pacnt].points[0], paths[parentcnt].points )\n\t\t\t\t\t\t\t\t\t\t){\n\t\t\t\t\t\t\t\t\t\t\tparentidx = parentcnt;\n\t\t\t\t\t\t\t\t\t\t\tparentbbox = paths[parentcnt].boundingbox;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpaths[parentidx].holechildren.push( pacnt );\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}// End of holepath parent finding\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpacnt++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}// End of Close path\n\t\t\t\t\t\t\n\t\t\t\t\t\tpcnt++;\n\t\t\t\t\t\t\n\t\t\t\t\t}// End of Path points loop\n\t\t\t\t\t\n\t\t\t\t}// End of Follow path\n\t\t\t\t\n\t\t\t}// End of i loop\n\t\t}// End of j loop\n\t\t\n\t\treturn paths;\n\t},// End of pathscan()\n\t\n\tthis.boundingboxincludes = function( parentbbox, childbbox ){\n\t\treturn ( ( parentbbox[0] < childbbox[0] ) && ( parentbbox[1] < childbbox[1] ) && ( parentbbox[2] > childbbox[2] ) && ( parentbbox[3] > childbbox[3] ) );\n\t},// End of boundingboxincludes()\n\t\n\t// 3. Batch pathscan\n\tthis.batchpathscan = function( layers, pathomit ){\n\t\tvar bpaths = [];\n\t\tfor(var k in layers){\n\t\t\tif(!layers.hasOwnProperty(k)){ continue; }\n\t\t\tbpaths[k] = _this.pathscan( layers[k], pathomit );\n\t\t}\n\t\treturn bpaths;\n\t},\n\t\n\t// 4. interpollating between path points for nodes with 8 directions ( East, SouthEast, S, SW, W, NW, N, NE )\n\tthis.internodes = function( paths, options ){\n\t\tvar ins = [], palen=0, nextidx=0, nextidx2=0, previdx=0, previdx2=0, pacnt, pcnt;\n\t\t\n\t\t// paths loop\n\t\tfor(pacnt=0; pacnt<paths.length; pacnt++){\n\t\t\t\n\t\t\tins[pacnt] = {};\n\t\t\tins[pacnt].points = [];\n\t\t\tins[pacnt].boundingbox = paths[pacnt].boundingbox;\n\t\t\tins[pacnt].holechildren = paths[pacnt].holechildren;\n\t\t\tins[pacnt].isholepath = paths[pacnt].isholepath;\n\t\t\tpalen = paths[pacnt].points.length;\n\t\t\t\n\t\t\t// pathpoints loop\n\t\t\tfor(pcnt=0; pcnt<palen; pcnt++){\n\t\t\t\n\t\t\t\t// next and previous point indexes\n\t\t\t\tnextidx = (pcnt+1)%palen; nextidx2 = (pcnt+2)%palen; previdx = (pcnt-1+palen)%palen; previdx2 = (pcnt-2+palen)%palen;\n\t\t\t\t\n\t\t\t\t// right angle enhance\n\t\t\t\tif( options.rightangleenhance && _this.testrightangle( paths[pacnt], previdx2, previdx, pcnt, nextidx, nextidx2 ) ){\n\t\t\t\t\t\n\t\t\t\t\t// Fix previous direction\n\t\t\t\t\tif(ins[pacnt].points.length > 0){\n\t\t\t\t\t\tins[pacnt].points[ ins[pacnt].points.length-1 ].linesegment = _this.getdirection(\n\t\t\t\t\t\t\t\tins[pacnt].points[ ins[pacnt].points.length-1 ].x,\n\t\t\t\t\t\t\t\tins[pacnt].points[ ins[pacnt].points.length-1 ].y,\n\t\t\t\t\t\t\t\tpaths[pacnt].points[pcnt].x,\n\t\t\t\t\t\t\t\tpaths[pacnt].points[pcnt].y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// This corner point\n\t\t\t\t\tins[pacnt].points.push({\n\t\t\t\t\t\tx : paths[pacnt].points[pcnt].x,\n\t\t\t\t\t\ty : paths[pacnt].points[pcnt].y,\n\t\t\t\t\t\tlinesegment : _this.getdirection(\n\t\t\t\t\t\t\t\tpaths[pacnt].points[pcnt].x,\n\t\t\t\t\t\t\t\tpaths[pacnt].points[pcnt].y,\n\t\t\t\t\t\t\t\t(( paths[pacnt].points[pcnt].x + paths[pacnt].points[nextidx].x ) /2),\n\t\t\t\t\t\t\t\t(( paths[pacnt].points[pcnt].y + paths[pacnt].points[nextidx].y ) /2)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}// End of right angle enhance\n\t\t\t\t\n\t\t\t\t// interpolate between two path points\n\t\t\t\tins[pacnt].points.push({\n\t\t\t\t\tx : (( paths[pacnt].points[pcnt].x + paths[pacnt].points[nextidx].x ) /2),\n\t\t\t\t\ty : (( paths[pacnt].points[pcnt].y + paths[pacnt].points[nextidx].y ) /2),\n\t\t\t\t\tlinesegment : _this.getdirection(\n\t\t\t\t\t\t\t(( paths[pacnt].points[pcnt].x + paths[pacnt].points[nextidx].x ) /2),\n\t\t\t\t\t\t\t(( paths[pacnt].points[pcnt].y + paths[pacnt].points[nextidx].y ) /2),\n\t\t\t\t\t\t\t(( paths[pacnt].points[nextidx].x + paths[pacnt].points[nextidx2].x ) /2),\n\t\t\t\t\t\t\t(( paths[pacnt].points[nextidx].y + paths[pacnt].points[nextidx2].y ) /2)\n\t\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}// End of pathpoints loop\n\t\t\t\t\t\t\n\t\t}// End of paths loop\n\t\t\n\t\treturn ins;\n\t},// End of internodes()\n\t\n\tthis.testrightangle = function( path, idx1, idx2, idx3, idx4, idx5 ){\n\t\treturn ( (( path.points[idx3].x === path.points[idx1].x) &&\n\t\t\t\t  ( path.points[idx3].x === path.points[idx2].x) &&\n\t\t\t\t  ( path.points[idx3].y === path.points[idx4].y) &&\n\t\t\t\t  ( path.points[idx3].y === path.points[idx5].y)\n\t\t\t\t ) ||\n\t\t\t\t (( path.points[idx3].y === path.points[idx1].y) &&\n\t\t\t\t  ( path.points[idx3].y === path.points[idx2].y) &&\n\t\t\t\t  ( path.points[idx3].x === path.points[idx4].x) &&\n\t\t\t\t  ( path.points[idx3].x === path.points[idx5].x)\n\t\t\t\t )\n\t\t);\n\t},// End of testrightangle()\n\t\n\tthis.getdirection = function( x1, y1, x2, y2 ){\n\t\tvar val = 8;\n\t\tif(x1 < x2){\n\t\t\tif     (y1 < y2){ val = 1; }// SouthEast\n\t\t\telse if(y1 > y2){ val = 7; }// NE\n\t\t\telse            { val = 0; }// E\n\t\t}else if(x1 > x2){\n\t\t\tif     (y1 < y2){ val = 3; }// SW\n\t\t\telse if(y1 > y2){ val = 5; }// NW\n\t\t\telse            { val = 4; }// W\n\t\t}else{\n\t\t\tif     (y1 < y2){ val = 2; }// S\n\t\t\telse if(y1 > y2){ val = 6; }// N\n\t\t\telse            { val = 8; }// center, this should not happen\n\t\t}\n\t\treturn val;\n\t},// End of getdirection()\n\t\n\t// 4. Batch interpollation\n\tthis.batchinternodes = function( bpaths, options ){\n\t\tvar binternodes = [];\n\t\tfor (var k in bpaths) {\n\t\t\tif(!bpaths.hasOwnProperty(k)){ continue; }\n\t\t\tbinternodes[k] = _this.internodes(bpaths[k], options);\n\t\t}\n\t\treturn binternodes;\n\t},\n\t\n\t// 5. tracepath() : recursively trying to fit straight and quadratic spline segments on the 8 direction internode path\n\t\n\t// 5.1. Find sequences of points with only 2 segment types\n\t// 5.2. Fit a straight line on the sequence\n\t// 5.3. If the straight line fails (distance error > ltres), find the point with the biggest error\n\t// 5.4. Fit a quadratic spline through errorpoint (project this to get controlpoint), then measure errors on every point in the sequence\n\t// 5.5. If the spline fails (distance error > qtres), find the point with the biggest error, set splitpoint = fitting point\n\t// 5.6. Split sequence and recursively apply 5.2. - 5.6. to startpoint-splitpoint and splitpoint-endpoint sequences\n\t\n\tthis.tracepath = function( path, ltres, qtres ){\n\t\tvar pcnt=0, segtype1, segtype2, seqend, smp = {};\n\t\tsmp.segments = [];\n\t\tsmp.boundingbox = path.boundingbox;\n\t\tsmp.holechildren = path.holechildren;\n\t\tsmp.isholepath = path.isholepath;\n\t\t\n\t\twhile(pcnt < path.points.length){\n\t\t\t// 5.1. Find sequences of points with only 2 segment types\n\t\t\tsegtype1 = path.points[pcnt].linesegment; segtype2 = -1; seqend=pcnt+1;\n\t\t\twhile(\n\t\t\t\t((path.points[seqend].linesegment === segtype1) || (path.points[seqend].linesegment === segtype2) || (segtype2 === -1))\n\t\t\t\t&& (seqend < path.points.length-1) ){\n\t\t\t\t\n\t\t\t\tif((path.points[seqend].linesegment!==segtype1) && (segtype2===-1)){ segtype2 = path.points[seqend].linesegment; }\n\t\t\t\tseqend++;\n\t\t\t\t\n\t\t\t}\n\t\t\tif(seqend === path.points.length-1){ seqend = 0; }\n\n\t\t\t// 5.2. - 5.6. Split sequence and recursively apply 5.2. - 5.6. to startpoint-splitpoint and splitpoint-endpoint sequences\n\t\t\tsmp.segments = smp.segments.concat( _this.fitseq(path, ltres, qtres, pcnt, seqend) );\n\t\t\t\n\t\t\t// forward pcnt;\n\t\t\tif(seqend>0){ pcnt = seqend; }else{ pcnt = path.points.length; }\n\t\t\t\n\t\t}// End of pcnt loop\n\t\t\n\t\treturn smp;\n\t},// End of tracepath()\n\t\t\n\t// 5.2. - 5.6. recursively fitting a straight or quadratic line segment on this sequence of path nodes,\n\t// called from tracepath()\n\tthis.fitseq = function( path, ltres, qtres, seqstart, seqend ){\n\t\t// return if invalid seqend\n\t\tif( (seqend>path.points.length) || (seqend<0) ){ return []; }\n\t\t// variables\n\t\tvar errorpoint=seqstart, errorval=0, curvepass=true, px, py, dist2;\n\t\tvar tl = (seqend-seqstart); if(tl<0){ tl += path.points.length; }\n\t\tvar vx = (path.points[seqend].x-path.points[seqstart].x) / tl,\n\t\t\tvy = (path.points[seqend].y-path.points[seqstart].y) / tl;\n\t\t\n\t\t// 5.2. Fit a straight line on the sequence\n\t\tvar pcnt = (seqstart+1) % path.points.length, pl;\n\t\twhile(pcnt != seqend){\n\t\t\tpl = pcnt-seqstart; if(pl<0){ pl += path.points.length; }\n\t\t\tpx = path.points[seqstart].x + vx * pl; py = path.points[seqstart].y + vy * pl;\n\t\t\tdist2 = (path.points[pcnt].x-px)*(path.points[pcnt].x-px) + (path.points[pcnt].y-py)*(path.points[pcnt].y-py);\n\t\t\tif(dist2>ltres){curvepass=false;}\n\t\t\tif(dist2>errorval){ errorpoint=pcnt; errorval=dist2; }\n\t\t\tpcnt = (pcnt+1)%path.points.length;\n\t\t}\n\t\t// return straight line if fits\n\t\tif(curvepass){ return [{ type:'L', x1:path.points[seqstart].x, y1:path.points[seqstart].y, x2:path.points[seqend].x, y2:path.points[seqend].y }]; }\n\t\t\n\t\t// 5.3. If the straight line fails (distance error>ltres), find the point with the biggest error\n\t\tvar fitpoint = errorpoint; curvepass = true; errorval = 0;\n\t\t\n\t\t// 5.4. Fit a quadratic spline through this point, measure errors on every point in the sequence\n\t\t// helpers and projecting to get control point\n\t\tvar t=(fitpoint-seqstart)/tl, t1=(1-t)*(1-t), t2=2*(1-t)*t, t3=t*t;\n\t\tvar cpx = (t1*path.points[seqstart].x + t3*path.points[seqend].x - path.points[fitpoint].x)/-t2 ,\n\t\t\tcpy = (t1*path.points[seqstart].y + t3*path.points[seqend].y - path.points[fitpoint].y)/-t2 ;\n\t\t\n\t\t// Check every point\n\t\tpcnt = seqstart+1;\n\t\twhile(pcnt != seqend){\n\t\t\tt=(pcnt-seqstart)/tl; t1=(1-t)*(1-t); t2=2*(1-t)*t; t3=t*t;\n\t\t\tpx = t1 * path.points[seqstart].x + t2 * cpx + t3 * path.points[seqend].x;\n\t\t\tpy = t1 * path.points[seqstart].y + t2 * cpy + t3 * path.points[seqend].y;\n\t\t\t\n\t\t\tdist2 = (path.points[pcnt].x-px)*(path.points[pcnt].x-px) + (path.points[pcnt].y-py)*(path.points[pcnt].y-py);\n\t\t\t\n\t\t\tif(dist2>qtres){curvepass=false;}\n\t\t\tif(dist2>errorval){ errorpoint=pcnt; errorval=dist2; }\n\t\t\tpcnt = (pcnt+1)%path.points.length;\n\t\t}\n\t\t// return spline if fits\n\t\tif(curvepass){ return [{ type:'Q', x1:path.points[seqstart].x, y1:path.points[seqstart].y, x2:cpx, y2:cpy, x3:path.points[seqend].x, y3:path.points[seqend].y }]; }\n\t\t// 5.5. If the spline fails (distance error>qtres), find the point with the biggest error\n\t\tvar splitpoint = fitpoint; // Earlier: Math.floor((fitpoint + errorpoint)/2);\n\t\t\n\t\t// 5.6. Split sequence and recursively apply 5.2. - 5.6. to startpoint-splitpoint and splitpoint-endpoint sequences\n\t\treturn _this.fitseq( path, ltres, qtres, seqstart, splitpoint ).concat(\n\t\t\t\t_this.fitseq( path, ltres, qtres, splitpoint, seqend ) );\n\t\t\n\t},// End of fitseq()\n\t\n\t// 5. Batch tracing paths\n\tthis.batchtracepaths = function(internodepaths,ltres,qtres){\n\t\tvar btracedpaths = [];\n\t\tfor(var k in internodepaths){\n\t\t\tif(!internodepaths.hasOwnProperty(k)){ continue; }\n\t\t\tbtracedpaths.push( _this.tracepath(internodepaths[k],ltres,qtres) );\n\t\t}\n\t\treturn btracedpaths;\n\t},\n\t\n\t// 5. Batch tracing layers\n\tthis.batchtracelayers = function(binternodes, ltres, qtres){\n\t\tvar btbis = [];\n\t\tfor(var k in binternodes){\n\t\t\tif(!binternodes.hasOwnProperty(k)){ continue; }\n\t\t\tbtbis[k] = _this.batchtracepaths(binternodes[k], ltres, qtres);\n\t\t}\n\t\treturn btbis;\n\t},\n\t\n\t////////////////////////////////////////////////////////////\n\t//\n\t//  SVG Drawing functions\n\t//\n\t////////////////////////////////////////////////////////////\n\t\n\t// Rounding to given decimals https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-in-javascript\n\tthis.roundtodec = function(val,places){ return +val.toFixed(places); },\n\t\n\t// Getting SVG path element string from a traced path\n\tthis.svgpathstring = function( tracedata, lnum, pathnum, options ){\n\t\t\n\t\tvar layer = tracedata.layers[lnum], smp = layer[pathnum], str='', pcnt;\n\t\t\n\t\t// Line filter\n\t\tif(options.linefilter && (smp.segments.length < 3)){ return str; }\n\t\t\n\t\t// Starting path element, desc contains layer and path number\n\t\tstr = '<path '+\n\t\t\t( options.desc ? ('desc=\"l '+lnum+' p '+pathnum+'\" ') : '' ) +\n\t\t\t_this.tosvgcolorstr(tracedata.palette[lnum], options) +\n\t\t\t'd=\"';\n\t\t\n\t\t// Creating non-hole path string\n\t\tif( options.roundcoords === -1 ){\n\t\t\tstr += 'M '+ smp.segments[0].x1 * options.scale +' '+ smp.segments[0].y1 * options.scale +' ';\n\t\t\tfor(pcnt=0; pcnt<smp.segments.length; pcnt++){\n\t\t\t\tstr += smp.segments[pcnt].type +' '+ smp.segments[pcnt].x2 * options.scale +' '+ smp.segments[pcnt].y2 * options.scale +' ';\n\t\t\t\tif(smp.segments[pcnt].hasOwnProperty('x3')){\n\t\t\t\t\tstr += smp.segments[pcnt].x3 * options.scale +' '+ smp.segments[pcnt].y3 * options.scale +' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr += 'Z ';\n\t\t}else{\n\t\t\tstr += 'M '+ _this.roundtodec( smp.segments[0].x1 * options.scale, options.roundcoords ) +' '+ _this.roundtodec( smp.segments[0].y1 * options.scale, options.roundcoords ) +' ';\n\t\t\tfor(pcnt=0; pcnt<smp.segments.length; pcnt++){\n\t\t\t\tstr += smp.segments[pcnt].type +' '+ _this.roundtodec( smp.segments[pcnt].x2 * options.scale, options.roundcoords ) +' '+ _this.roundtodec( smp.segments[pcnt].y2 * options.scale, options.roundcoords ) +' ';\n\t\t\t\tif(smp.segments[pcnt].hasOwnProperty('x3')){\n\t\t\t\t\tstr += _this.roundtodec( smp.segments[pcnt].x3 * options.scale, options.roundcoords ) +' '+ _this.roundtodec( smp.segments[pcnt].y3 * options.scale, options.roundcoords ) +' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr += 'Z ';\n\t\t}// End of creating non-hole path string\n\t\t\n\t\t// Hole children\n\t\tfor( var hcnt=0; hcnt < smp.holechildren.length; hcnt++){\n\t\t\tvar hsmp = layer[ smp.holechildren[hcnt] ];\n\t\t\t// Creating hole path string\n\t\t\tif( options.roundcoords === -1 ){\n\t\t\t\t\n\t\t\t\tif(hsmp.segments[ hsmp.segments.length-1 ].hasOwnProperty('x3')){\n\t\t\t\t\tstr += 'M '+ hsmp.segments[ hsmp.segments.length-1 ].x3 * options.scale +' '+ hsmp.segments[ hsmp.segments.length-1 ].y3 * options.scale +' ';\n\t\t\t\t}else{\n\t\t\t\t\tstr += 'M '+ hsmp.segments[ hsmp.segments.length-1 ].x2 * options.scale +' '+ hsmp.segments[ hsmp.segments.length-1 ].y2 * options.scale +' ';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor(pcnt = hsmp.segments.length-1; pcnt >= 0; pcnt--){\n\t\t\t\t\tstr += hsmp.segments[pcnt].type +' ';\n\t\t\t\t\tif(hsmp.segments[pcnt].hasOwnProperty('x3')){\n\t\t\t\t\t\tstr += hsmp.segments[pcnt].x2 * options.scale +' '+ hsmp.segments[pcnt].y2 * options.scale +' ';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstr += hsmp.segments[pcnt].x1 * options.scale +' '+ hsmp.segments[pcnt].y1 * options.scale +' ';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tif(hsmp.segments[ hsmp.segments.length-1 ].hasOwnProperty('x3')){\n\t\t\t\t\tstr += 'M '+ _this.roundtodec( hsmp.segments[ hsmp.segments.length-1 ].x3 * options.scale ) +' '+ _this.roundtodec( hsmp.segments[ hsmp.segments.length-1 ].y3 * options.scale ) +' ';\n\t\t\t\t}else{\n\t\t\t\t\tstr += 'M '+ _this.roundtodec( hsmp.segments[ hsmp.segments.length-1 ].x2 * options.scale ) +' '+ _this.roundtodec( hsmp.segments[ hsmp.segments.length-1 ].y2 * options.scale ) +' ';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor(pcnt = hsmp.segments.length-1; pcnt >= 0; pcnt--){\n\t\t\t\t\tstr += hsmp.segments[pcnt].type +' ';\n\t\t\t\t\tif(hsmp.segments[pcnt].hasOwnProperty('x3')){\n\t\t\t\t\t\tstr += _this.roundtodec( hsmp.segments[pcnt].x2 * options.scale ) +' '+ _this.roundtodec( hsmp.segments[pcnt].y2 * options.scale ) +' ';\n\t\t\t\t\t}\n\t\t\t\t\tstr += _this.roundtodec( hsmp.segments[pcnt].x1 * options.scale ) +' '+ _this.roundtodec( hsmp.segments[pcnt].y1 * options.scale ) +' ';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}// End of creating hole path string\n\t\t\t\n\t\t\tstr += 'Z '; // Close path\n\t\t\t\n\t\t}// End of holepath check\n\t\t\n\t\t// Closing path element\n\t\tstr += '\" />';\n\t\t\n\t\t// Rendering control points\n\t\tif(options.lcpr || options.qcpr){\n\t\t\tfor(pcnt=0; pcnt<smp.segments.length; pcnt++){\n\t\t\t\tif( smp.segments[pcnt].hasOwnProperty('x3') && options.qcpr ){\n\t\t\t\t\tstr += '<circle cx=\"'+ smp.segments[pcnt].x2 * options.scale +'\" cy=\"'+ smp.segments[pcnt].y2 * options.scale +'\" r=\"'+ options.qcpr +'\" fill=\"cyan\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"black\" />';\n\t\t\t\t\tstr += '<circle cx=\"'+ smp.segments[pcnt].x3 * options.scale +'\" cy=\"'+ smp.segments[pcnt].y3 * options.scale +'\" r=\"'+ options.qcpr +'\" fill=\"white\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"black\" />';\n\t\t\t\t\tstr += '<line x1=\"'+ smp.segments[pcnt].x1 * options.scale +'\" y1=\"'+ smp.segments[pcnt].y1 * options.scale +'\" x2=\"'+ smp.segments[pcnt].x2 * options.scale +'\" y2=\"'+ smp.segments[pcnt].y2 * options.scale +'\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"cyan\" />';\n\t\t\t\t\tstr += '<line x1=\"'+ smp.segments[pcnt].x2 * options.scale +'\" y1=\"'+ smp.segments[pcnt].y2 * options.scale +'\" x2=\"'+ smp.segments[pcnt].x3 * options.scale +'\" y2=\"'+ smp.segments[pcnt].y3 * options.scale +'\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"cyan\" />';\n\t\t\t\t}\n\t\t\t\tif( (!smp.segments[pcnt].hasOwnProperty('x3')) && options.lcpr){\n\t\t\t\t\tstr += '<circle cx=\"'+ smp.segments[pcnt].x2 * options.scale +'\" cy=\"'+ smp.segments[pcnt].y2 * options.scale +'\" r=\"'+ options.lcpr +'\" fill=\"white\" stroke-width=\"'+ options.lcpr * 0.2 +'\" stroke=\"black\" />';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Hole children control points\n\t\t\tfor( var hcnt=0; hcnt < smp.holechildren.length; hcnt++){\n\t\t\t\tvar hsmp = layer[ smp.holechildren[hcnt] ];\n\t\t\t\tfor(pcnt=0; pcnt<hsmp.segments.length; pcnt++){\n\t\t\t\t\tif( hsmp.segments[pcnt].hasOwnProperty('x3') && options.qcpr ){\n\t\t\t\t\t\tstr += '<circle cx=\"'+ hsmp.segments[pcnt].x2 * options.scale +'\" cy=\"'+ hsmp.segments[pcnt].y2 * options.scale +'\" r=\"'+ options.qcpr +'\" fill=\"cyan\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"black\" />';\n\t\t\t\t\t\tstr += '<circle cx=\"'+ hsmp.segments[pcnt].x3 * options.scale +'\" cy=\"'+ hsmp.segments[pcnt].y3 * options.scale +'\" r=\"'+ options.qcpr +'\" fill=\"white\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"black\" />';\n\t\t\t\t\t\tstr += '<line x1=\"'+ hsmp.segments[pcnt].x1 * options.scale +'\" y1=\"'+ hsmp.segments[pcnt].y1 * options.scale +'\" x2=\"'+ hsmp.segments[pcnt].x2 * options.scale +'\" y2=\"'+ hsmp.segments[pcnt].y2 * options.scale +'\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"cyan\" />';\n\t\t\t\t\t\tstr += '<line x1=\"'+ hsmp.segments[pcnt].x2 * options.scale +'\" y1=\"'+ hsmp.segments[pcnt].y2 * options.scale +'\" x2=\"'+ hsmp.segments[pcnt].x3 * options.scale +'\" y2=\"'+ hsmp.segments[pcnt].y3 * options.scale +'\" stroke-width=\"'+ options.qcpr * 0.2 +'\" stroke=\"cyan\" />';\n\t\t\t\t\t}\n\t\t\t\t\tif( (!hsmp.segments[pcnt].hasOwnProperty('x3')) && options.lcpr){\n\t\t\t\t\t\tstr += '<circle cx=\"'+ hsmp.segments[pcnt].x2 * options.scale +'\" cy=\"'+ hsmp.segments[pcnt].y2 * options.scale +'\" r=\"'+ options.lcpr +'\" fill=\"white\" stroke-width=\"'+ options.lcpr * 0.2 +'\" stroke=\"black\" />';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// End of Rendering control points\n\t\t\t\n\t\treturn str;\n\t\t\n\t},// End of svgpathstring()\n\t\n\t// Converting tracedata to an SVG string\n\tthis.getsvgstring = function( tracedata, options ){\n\t\t\n\t\toptions = _this.checkoptions(options);\n\t\t\n\t\tvar w = tracedata.width * options.scale, h = tracedata.height * options.scale;\n\t\t\n\t\t// SVG start\n\t\tvar svgstr = '<svg ' + (options.viewbox ? ('viewBox=\"0 0 '+w+' '+h+'\" ') : ('width=\"'+w+'\" height=\"'+h+'\" ')) +\n\t\t\t'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" desc=\"Created with imagetracer.js version '+_this.versionnumber+'\" >';\n\n\t\t// Drawing: Layers and Paths loops\n\t\tfor(var lcnt=0; lcnt < tracedata.layers.length; lcnt++){\n\t\t\tfor(var pcnt=0; pcnt < tracedata.layers[lcnt].length; pcnt++){\n\t\t\t\t\n\t\t\t\t// Adding SVG <path> string\n\t\t\t\tif( !tracedata.layers[lcnt][pcnt].isholepath ){\n\t\t\t\t\tsvgstr += _this.svgpathstring( tracedata, lcnt, pcnt, options );\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}// End of paths loop\n\t\t}// End of layers loop\n\t\t\n\t\t// SVG End\n\t\tsvgstr+='</svg>';\n\t\t\n\t\treturn svgstr;\n\t\t\n\t},// End of getsvgstring()\n\t\n\t// Comparator for numeric Array.sort\n\tthis.compareNumbers = function(a,b){ return a - b; },\n\t\n\t// Convert color object to rgba string\n\tthis.torgbastr = function(c){ return 'rgba('+c.r+','+c.g+','+c.b+','+c.a+')'; },\n\t\n\t// Convert color object to SVG color string\n\tthis.tosvgcolorstr = function(c, options){\n\t\treturn 'fill=\"rgb('+c.r+','+c.g+','+c.b+')\" stroke=\"rgb('+c.r+','+c.g+','+c.b+')\" stroke-width=\"'+options.strokewidth+'\" opacity=\"'+c.a/255.0+'\" ';\n\t},\n\t\n\t// Helper function: Appending an <svg> element to a container from an svgstring\n\tthis.appendSVGString = function(svgstr,parentid){\n\t\tvar div;\n\t\tif(parentid){\n\t\t\tdiv = document.getElementById(parentid);\n\t\t\tif(!div){\n\t\t\t\tdiv = document.createElement('div');\n\t\t\t\tdiv.id = parentid;\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t}\n\t\t}else{\n\t\t\tdiv = document.createElement('div');\n\t\t\tdocument.body.appendChild(div);\n\t\t}\n\t\tdiv.innerHTML += svgstr;\n\t},\n\t\n\t////////////////////////////////////////////////////////////\n\t//\n\t//  Canvas functions\n\t//\n\t////////////////////////////////////////////////////////////\n\t\n\t// Gaussian kernels for blur\n\tthis.gks = [ [0.27901,0.44198,0.27901], [0.135336,0.228569,0.272192,0.228569,0.135336], [0.086776,0.136394,0.178908,0.195843,0.178908,0.136394,0.086776],\n\t             [0.063327,0.093095,0.122589,0.144599,0.152781,0.144599,0.122589,0.093095,0.063327], [0.049692,0.069304,0.089767,0.107988,0.120651,0.125194,0.120651,0.107988,0.089767,0.069304,0.049692] ],\n\t\n\t// Selective Gaussian blur for preprocessing\n\tthis.blur = function(imgd,radius,delta){\n\t\tvar i,j,k,d,idx,racc,gacc,bacc,aacc,wacc;\n\t\t\n\t\t// new ImageData\n\t\tvar imgd2 = { width:imgd.width, height:imgd.height, data:[] };\n\t\t\n\t\t// radius and delta limits, this kernel\n\t\tradius = Math.floor(radius); if(radius<1){ return imgd; } if(radius>5){ radius = 5; } delta = Math.abs( delta ); if(delta>1024){ delta = 1024; }\n\t\tvar thisgk = _this.gks[radius-1];\n\t\t\n\t\t// loop through all pixels, horizontal blur\n\t\tfor( j=0; j < imgd.height; j++ ){\n\t\t\tfor( i=0; i < imgd.width; i++ ){\n\n\t\t\t\tracc = 0; gacc = 0; bacc = 0; aacc = 0; wacc = 0;\n\t\t\t\t// gauss kernel loop\n\t\t\t\tfor( k = -radius; k < radius+1; k++){\n\t\t\t\t\t// add weighted color values\n\t\t\t\t\tif( (i+k > 0) && (i+k < imgd.width) ){\n\t\t\t\t\t\tidx = (j*imgd.width+i+k)*4;\n\t\t\t\t\t\tracc += imgd.data[idx  ] * thisgk[k+radius];\n\t\t\t\t\t\tgacc += imgd.data[idx+1] * thisgk[k+radius];\n\t\t\t\t\t\tbacc += imgd.data[idx+2] * thisgk[k+radius];\n\t\t\t\t\t\taacc += imgd.data[idx+3] * thisgk[k+radius];\n\t\t\t\t\t\twacc += thisgk[k+radius];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// The new pixel\n\t\t\t\tidx = (j*imgd.width+i)*4;\n\t\t\t\timgd2.data[idx  ] = Math.floor(racc / wacc);\n\t\t\t\timgd2.data[idx+1] = Math.floor(gacc / wacc);\n\t\t\t\timgd2.data[idx+2] = Math.floor(bacc / wacc);\n\t\t\t\timgd2.data[idx+3] = Math.floor(aacc / wacc);\n\t\t\t\t\n\t\t\t}// End of width loop\n\t\t}// End of horizontal blur\n\t\t\n\t\t// copying the half blurred imgd2\n\t\tvar himgd = new Uint8ClampedArray(imgd2.data);\n\t\t\n\t\t// loop through all pixels, vertical blur\n\t\tfor( j=0; j < imgd.height; j++ ){\n\t\t\tfor( i=0; i < imgd.width; i++ ){\n\n\t\t\t\tracc = 0; gacc = 0; bacc = 0; aacc = 0; wacc = 0;\n\t\t\t\t// gauss kernel loop\n\t\t\t\tfor( k = -radius; k < radius+1; k++){\n\t\t\t\t\t// add weighted color values\n\t\t\t\t\tif( (j+k > 0) && (j+k < imgd.height) ){\n\t\t\t\t\t\tidx = ((j+k)*imgd.width+i)*4;\n\t\t\t\t\t\tracc += himgd[idx  ] * thisgk[k+radius];\n\t\t\t\t\t\tgacc += himgd[idx+1] * thisgk[k+radius];\n\t\t\t\t\t\tbacc += himgd[idx+2] * thisgk[k+radius];\n\t\t\t\t\t\taacc += himgd[idx+3] * thisgk[k+radius];\n\t\t\t\t\t\twacc += thisgk[k+radius];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// The new pixel\n\t\t\t\tidx = (j*imgd.width+i)*4;\n\t\t\t\timgd2.data[idx  ] = Math.floor(racc / wacc);\n\t\t\t\timgd2.data[idx+1] = Math.floor(gacc / wacc);\n\t\t\t\timgd2.data[idx+2] = Math.floor(bacc / wacc);\n\t\t\t\timgd2.data[idx+3] = Math.floor(aacc / wacc);\n\t\t\t\t\n\t\t\t}// End of width loop\n\t\t}// End of vertical blur\n\t\t\n\t\t// Selective blur: loop through all pixels\n\t\tfor( j=0; j < imgd.height; j++ ){\n\t\t\tfor( i=0; i < imgd.width; i++ ){\n\t\t\t\t\n\t\t\t\tidx = (j*imgd.width+i)*4;\n\t\t\t\t// d is the difference between the blurred and the original pixel\n\t\t\t\td = Math.abs(imgd2.data[idx  ] - imgd.data[idx  ]) + Math.abs(imgd2.data[idx+1] - imgd.data[idx+1]) +\n\t\t\t\t\tMath.abs(imgd2.data[idx+2] - imgd.data[idx+2]) + Math.abs(imgd2.data[idx+3] - imgd.data[idx+3]);\n\t\t\t\t// selective blur: if d>delta, put the original pixel back\n\t\t\t\tif(d>delta){\n\t\t\t\t\timgd2.data[idx  ] = imgd.data[idx  ];\n\t\t\t\t\timgd2.data[idx+1] = imgd.data[idx+1];\n\t\t\t\t\timgd2.data[idx+2] = imgd.data[idx+2];\n\t\t\t\t\timgd2.data[idx+3] = imgd.data[idx+3];\n\t\t\t\t}\n\t\t\t}\n\t\t}// End of Selective blur\n\t\t\n\t\treturn imgd2;\n\t\t\n\t},// End of blur()\n\t\n\t// Helper function: loading an image from a URL, then executing callback with canvas as argument\n\tthis.loadImage = function(url,callback,options){\n\t\tvar img = new Image();\n\t\tif(options && options.corsenabled){ img.crossOrigin = 'Anonymous'; }\n\t\timg.onload = function(){\n\t\t\tvar canvas = document.createElement('canvas');\n\t\t\tcanvas.width = img.width;\n\t\t\tcanvas.height = img.height;\n\t\t\tvar context = canvas.getContext('2d');\n\t\t\tcontext.drawImage(img,0,0);\n\t\t\tcallback(canvas);\n\t\t};\n\t\timg.src = url;\n\t},\n\t\n\t// Helper function: getting ImageData from a canvas\n\tthis.getImgdata = function(canvas){\n\t\tvar context = canvas.getContext('2d');\n\t\treturn context.getImageData(0,0,canvas.width,canvas.height);\n\t},\n\t\n\t// Special palette to use with drawlayers()\n\tthis.specpalette = [\n\t\t{r:0,g:0,b:0,a:255}, {r:128,g:128,b:128,a:255}, {r:0,g:0,b:128,a:255}, {r:64,g:64,b:128,a:255},\n\t\t{r:192,g:192,b:192,a:255}, {r:255,g:255,b:255,a:255}, {r:128,g:128,b:192,a:255}, {r:0,g:0,b:192,a:255},\n\t\t{r:128,g:0,b:0,a:255}, {r:128,g:64,b:64,a:255}, {r:128,g:0,b:128,a:255}, {r:168,g:168,b:168,a:255},\n\t\t{r:192,g:128,b:128,a:255}, {r:192,g:0,b:0,a:255}, {r:255,g:255,b:255,a:255}, {r:0,g:128,b:0,a:255}\n\t],\n\t\n\t// Helper function: Drawing all edge node layers into a container\n\tthis.drawLayers = function(layers,palette,scale,parentid){\n\t\tscale = scale||1;\n\t\tvar w,h,i,j,k;\n\t\t\n\t\t// Preparing container\n\t\tvar div;\n\t\tif(parentid){\n\t\t\tdiv = document.getElementById(parentid);\n\t\t\tif(!div){\n\t\t\t\tdiv = document.createElement('div');\n\t\t\t\tdiv.id = parentid;\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t}\n\t\t}else{\n\t\t\tdiv = document.createElement('div');\n\t\t\tdocument.body.appendChild(div);\n\t\t}\n\t\t\n\t\t// Layers loop\n\t\tfor (k in layers) {\n\t\t\tif(!layers.hasOwnProperty(k)){ continue; }\n\t\t\t\n\t\t\t// width, height\n\t\t\tw=layers[k][0].length; h=layers[k].length;\n\t\t\t\n\t\t\t// Creating new canvas for every layer\n\t\t\tvar canvas = document.createElement('canvas'); canvas.width=w*scale; canvas.height=h*scale;\n\t\t\tvar context = canvas.getContext('2d');\n\t\t\t\n\t\t\t// Drawing\n\t\t\tfor(j=0; j<h; j++){\n\t\t\t\tfor(i=0; i<w; i++){\n\t\t\t\t\tcontext.fillStyle = _this.torgbastr(palette[ layers[k][j][i]%palette.length ]);\n\t\t\t\t\tcontext.fillRect(i*scale,j*scale,scale,scale);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Appending canvas to container\n\t\t\tdiv.appendChild(canvas);\n\t\t}// End of Layers loop\n\t}// End of drawlayers\n\t\n\t;// End of function list\n\t\n}// End of ImageTracer object\n\n// export as AMD module / Node module / browser or worker variable\nif(typeof define === 'function' && define.amd){\n\tdefine(function() { return new ImageTracer(); });\n}else if(typeof module !== 'undefined'){\n\tmodule.exports = new ImageTracer();\n}else if(typeof self !== 'undefined'){\n\tself.ImageTracer = new ImageTracer();\n}else window.ImageTracer = new ImageTracer();\n\n})();"],
  "mappings": ";;;;;AAAA;AAAA;AAqCA,KAAC,WAAU;AAAE;AAEb,eAAS,cAAa;AACrB,YAAI,QAAQ;AAEZ,aAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUrB,KAAK,aAAa,SAAU,KAAK,UAAU,SAAS;AACnD,oBAAU,MAAM,aAAa,OAAO;AAEpC,gBAAM;AAAA,YACL;AAAA,YACA,SAAS,QAAO;AACf;AAAA,gBACC,MAAM,eAAgB,MAAM,WAAW,MAAM,GAAG,OAAQ;AAAA,cACzD;AAAA,YACD;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA;AAAA,QAGA,KAAK,iBAAiB,SAAU,MAAM,SAAS;AAC9C,oBAAU,MAAM,aAAa,OAAO;AAEpC,cAAI,KAAK,MAAM,qBAAsB,MAAM,OAAQ;AAEnD,iBAAO,MAAM,aAAa,IAAI,OAAO;AAAA,QACtC;AAAA;AAAA;AAAA,QAIA,KAAK,mBAAmB,SAAU,KAAK,UAAU,SAAS;AACzD,oBAAU,MAAM,aAAa,OAAO;AAEpC,gBAAM;AAAA,YACJ;AAAA,YACA,SAAS,QAAO;AACf;AAAA,gBACC,MAAM,qBAAsB,MAAM,WAAW,MAAM,GAAG,OAAQ;AAAA,cAC/D;AAAA,YACD;AAAA,YACA;AAAA,UACF;AAAA,QACD;AAAA;AAAA,QAGA,KAAK,uBAAuB,SAAU,MAAM,SAAS;AACpD,oBAAU,MAAM,aAAa,OAAO;AAGpC,cAAI,KAAK,MAAM,kBAAmB,MAAM,OAAQ;AAEhD,cAAG,QAAQ,aAAa,GAAE;AAGzB,gBAAI,YAAY;AAAA,cACf,QAAS,CAAC;AAAA,cACV,SAAU,GAAG;AAAA,cACb,OAAQ,GAAG,MAAM,CAAC,EAAE,SAAO;AAAA,cAC3B,QAAS,GAAG,MAAM,SAAO;AAAA,YAC1B;AAGA,qBAAQ,WAAS,GAAG,WAAS,GAAG,QAAQ,QAAQ,YAAW;AAG1D,kBAAI,cACH,MAAM;AAAA,gBAEL,MAAM;AAAA,kBAEL,MAAM;AAAA,oBACL,MAAM,aAAc,IAAI,QAAS;AAAA,oBACjC,QAAQ;AAAA,kBACT;AAAA,kBAEA;AAAA,gBAED;AAAA,gBAEA,QAAQ;AAAA,gBACR,QAAQ;AAAA,cAET;AAGD,wBAAU,OAAO,KAAK,WAAW;AAAA,YAElC;AAAA,UAED,OAAK;AAEJ,gBAAI,KAAK,MAAM,SAAU,EAAG;AAG5B,gBAAG,QAAQ,kBAAiB;AAAE,oBAAM,WAAY,IAAI,MAAM,aAAa,QAAQ,OAAO,QAAQ,gBAAiB;AAAA,YAAG;AAGlH,gBAAI,MAAM,MAAM,cAAe,IAAI,QAAQ,QAAS;AAGpD,gBAAI,MAAM,MAAM,gBAAiB,KAAK,OAAQ;AAG9C,gBAAI,YAAY;AAAA,cACf,QAAS,MAAM,iBAAkB,KAAK,QAAQ,OAAO,QAAQ,KAAM;AAAA,cACnE,SAAU,GAAG;AAAA,cACb,OAAQ,KAAK;AAAA,cACb,QAAS,KAAK;AAAA,YACf;AAAA,UAED;AAGA,iBAAO;AAAA,QAER;AAAA,QAEA,KAAK,gBAAgB;AAAA,UACpB,WAAW;AAAA;AAAA,YAGV,aAAc;AAAA,YACd,OAAQ;AAAA,YACR,OAAQ;AAAA,YACR,UAAW;AAAA,YACX,mBAAoB;AAAA;AAAA,YAGpB,eAAgB;AAAA,YAChB,gBAAiB;AAAA,YACjB,eAAgB;AAAA,YAChB,kBAAmB;AAAA;AAAA,YAGnB,UAAW;AAAA;AAAA,YAGX,aAAc;AAAA,YACd,YAAa;AAAA,YACb,OAAQ;AAAA,YACR,aAAc;AAAA,YACd,SAAU;AAAA,YACV,MAAO;AAAA,YACP,MAAO;AAAA,YACP,MAAO;AAAA;AAAA,YAGP,YAAa;AAAA,YACb,WAAY;AAAA,UAEb;AAAA,UACA,eAAe,EAAE,eAAc,GAAG,gBAAe,EAAE;AAAA,UACnD,eAAe,EAAE,gBAAe,GAAG,YAAW,EAAE;AAAA,UAChD,SAAS,EAAE,OAAM,MAAM,YAAW,MAAM,mBAAkB,MAAM;AAAA,UAChE,SAAS,EAAE,OAAM,MAAM,YAAW,MAAM;AAAA,UACxC,YAAY,EAAE,UAAS,GAAG,aAAY,GAAG,OAAM,KAAK,OAAM,KAAK,gBAAe,GAAG;AAAA,UACjF,YAAY,EAAE,YAAW,GAAG,WAAW,GAAG;AAAA,UAC1C,aAAa,EAAE,eAAc,GAAG,kBAAiB,GAAG,gBAAe,EAAE;AAAA,UACrE,gBAAgB,EAAE,eAAc,GAAG,kBAAiB,GAAG,gBAAe,GAAG;AAAA,UACzE,mBAAmB,EAAE,eAAc,GAAG,gBAAe,EAAE;AAAA,UACvD,mBAAmB,EAAE,eAAc,GAAG,gBAAe,GAAG;AAAA,UACxD,aAAa,EAAE,eAAc,GAAG,kBAAiB,GAAG,UAAS,GAAG,YAAW,GAAG,WAAW,IAAI,OAAM,MAAM,YAAW,MAAM,gBAAe,IAAI,aAAY,EAAE;AAAA,UAC3J,aAAa,EAAE,OAAM,MAAM,eAAc,GAAG,kBAAiB,GAAG,gBAAe,GAAG,aAAY,EAAE;AAAA,UAChG,aAAa,EAAE,OAAM,IAAI,OAAM,IAAI,gBAAe,EAAE;AAAA,UACpD,aAAa,EAAE,OAAM,IAAI,OAAM,IAAI,gBAAe,IAAI,YAAW,GAAG,WAAW,KAAK,aAAY,EAAE;AAAA,UAClG,eAAe;AAAA,YAAE,OAAO;AAAA,YAAG,OAAO;AAAA,YAAG,UAAU;AAAA,YAAI,mBAAmB;AAAA,YAAM,eAAe;AAAA,YAAG,gBAAgB;AAAA,YAC7G,eAAe;AAAA,YAAG,kBAAkB;AAAA,YAAG,YAAY;AAAA,YAAG,WAAW;AAAA,YAAI,aAAa;AAAA,YAAG,YAAY;AAAA,YACjG,aAAa;AAAA,YAAG,KAAK,CAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAE;AAAA,UAAE;AAAA,QAC9F;AAAA;AAAA,QAGA,KAAK,eAAe,SAAS,SAAQ;AACpC,oBAAU,WAAW,CAAC;AAEtB,cAAG,OAAO,YAAY,UAAS;AAC9B,sBAAU,QAAQ,YAAY;AAC9B,gBAAI,MAAM,cAAc,OAAO,GAAG;AAAE,wBAAU,MAAM,cAAc,OAAO;AAAA,YAAG,OAAK;AAAE,wBAAU,CAAC;AAAA,YAAG;AAAA,UAClG;AAEA,cAAI,KAAK,OAAO,KAAK,MAAM,cAAc,SAAS,CAAC;AACnD,mBAAQ,IAAE,GAAG,IAAE,GAAG,QAAQ,KAAI;AAC7B,gBAAG,CAAC,QAAQ,eAAe,GAAG,CAAC,CAAC,GAAE;AAAE,sBAAQ,GAAG,CAAC,CAAC,IAAI,MAAM,cAAc,SAAS,EAAE,GAAG,CAAC,CAAC;AAAA,YAAG;AAAA,UAC7F;AAGA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,KAAK,oBAAoB,SAAU,MAAM,SAAS;AACjD,cAAI,MAAM,CAAC,GAAG,MAAI,GAAG,IAAG,KAAI,IAAI,aAAa,CAAC,GAAG,WAAW,KAAK,QAAQ,KAAK,QAAQ,GAAG,GAAG,GAAG,KAAK;AAGpG,cAAI,KAAK,KAAK,SAAS,WAAW,GAAG;AACpC,gBAAI,cAAc,IAAI,kBAAkB,WAAW,CAAC;AACpD,qBAAQ,QAAQ,GAAG,QAAQ,UAAW,SAAQ;AAC7C,0BAAY,QAAM,CAAG,IAAI,KAAK,KAAK,QAAM,CAAG;AAC5C,0BAAY,QAAM,IAAE,CAAC,IAAI,KAAK,KAAK,QAAM,IAAE,CAAC;AAC5C,0BAAY,QAAM,IAAE,CAAC,IAAI,KAAK,KAAK,QAAM,IAAE,CAAC;AAC5C,0BAAY,QAAM,IAAE,CAAC,IAAI;AAAA,YAC1B;AACA,iBAAK,OAAO;AAAA,UACb;AAGA,eAAK,IAAE,GAAG,IAAE,KAAK,SAAO,GAAG,KAAK;AAAE,gBAAI,CAAC,IAAE,CAAC;AAAG,iBAAI,IAAE,GAAG,IAAE,KAAK,QAAM,GAAI,KAAI;AAAE,kBAAI,CAAC,EAAE,CAAC,IAAI;AAAA,YAAI;AAAA,UAAE;AAG/F,cAAG,QAAQ,KAAI;AACd,sBAAU,QAAQ;AAAA,UACnB,WAAS,QAAQ,kBAAkB,GAAE;AACpC,sBAAU,MAAM,gBAAgB,QAAQ,cAAc;AAAA,UACvD,WAAS,QAAQ,kBAAkB,GAAE;AACpC,sBAAU,MAAM,cAAe,QAAQ,gBAAgB,IAAK;AAAA,UAC7D,OAAK;AACJ,sBAAU,MAAM,eAAgB,QAAQ,gBAAgB,IAAK;AAAA,UAC9D;AAGA,cAAI,QAAQ,aAAa,GAAG;AAAE,mBAAO,MAAM,KAAM,MAAM,QAAQ,YAAY,QAAQ,SAAU;AAAA,UAAG;AAGhG,eAAK,MAAI,GAAG,MAAM,QAAQ,kBAAkB,OAAO;AAGlD,gBAAG,MAAI,GAAE;AAER,mBAAK,IAAE,GAAG,IAAI,QAAQ,QAAQ,KAAK;AAGlC,oBAAI,WAAW,CAAC,EAAE,IAAI,GAAG;AACxB,0BAAQ,CAAC,IAAI;AAAA,oBAAG,GAAG,KAAK,MAAO,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAE;AAAA,oBAC7D,GAAG,KAAK,MAAO,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAE;AAAA,oBACjD,GAAG,KAAK,MAAO,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAE;AAAA,oBACjD,GAAI,KAAK,MAAO,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAE;AAAA,kBAAE;AAAA,gBACzD;AAGA,oBAAM,WAAW,CAAC,EAAE,IAAE,WAAW,QAAQ,iBAAqB,MAAM,QAAQ,mBAAiB,GAAK;AACjG,0BAAQ,CAAC,IAAI;AAAA,oBAAG,GAAG,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG;AAAA,oBAC3C,GAAG,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG;AAAA,oBAC/B,GAAG,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG;AAAA,oBAC/B,GAAG,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG;AAAA,kBAAE;AAAA,gBACtC;AAAA,cAED;AAAA,YACD;AAGA,iBAAK,IAAE,GAAG,IAAI,QAAQ,QAAQ,KAAK;AAAE,yBAAW,CAAC,IAAI,EAAE,GAAE,GAAG,GAAE,GAAG,GAAE,GAAG,GAAE,GAAG,GAAE,EAAE;AAAA,YAAG;AAGlF,iBAAK,IAAE,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/B,mBAAK,IAAE,GAAG,IAAI,KAAK,OAAO,KAAK;AAG9B,uBAAO,IAAE,KAAK,QAAM,KAAG;AAGvB,qBAAG;AAAG,sBAAM;AACZ,qBAAK,IAAE,GAAG,IAAE,QAAQ,QAAQ,KAAK;AAGhC,uBAAK,KAAK,IAAI,QAAQ,CAAC,EAAE,IAAE,KAAK,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,EAAE,IAAE,KAAK,KAAK,MAAI,CAAC,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,EAAE,IAAE,KAAK,KAAK,MAAI,CAAC,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,EAAE,IAAE,KAAK,KAAK,MAAI,CAAC,CAAC;AAGvK,sBAAG,KAAG,KAAI;AAAE,0BAAM;AAAI,yBAAK;AAAA,kBAAG;AAAA,gBAE/B;AAGA,2BAAW,EAAE,EAAE,KAAK,KAAK,KAAK,GAAK;AACnC,2BAAW,EAAE,EAAE,KAAK,KAAK,KAAK,MAAI,CAAC;AACnC,2BAAW,EAAE,EAAE,KAAK,KAAK,KAAK,MAAI,CAAC;AACnC,2BAAW,EAAE,EAAE,KAAK,KAAK,KAAK,MAAI,CAAC;AACnC,2BAAW,EAAE,EAAE;AAGf,oBAAI,IAAE,CAAC,EAAE,IAAE,CAAC,IAAI;AAAA,cAEjB;AAAA,YACD;AAAA,UAED;AAEA,iBAAO,EAAE,OAAM,KAAK,QAAgB;AAAA,QAErC;AAAA;AAAA,QAGA,KAAK,gBAAgB,SAAU,gBAAgB,MAAM;AACpD,cAAI,KAAK,UAAQ,CAAC;AAClB,mBAAQ,IAAE,GAAG,IAAE,gBAAgB,KAAI;AAClC,kBAAM,KAAK,MAAO,KAAK,OAAO,IAAI,KAAK,KAAK,SAAS,CAAE,IAAI;AAC3D,oBAAQ,KAAK,EAAE,GAAE,KAAK,KAAK,GAAK,GAAG,GAAE,KAAK,KAAK,MAAI,CAAC,GAAG,GAAE,KAAK,KAAK,MAAI,CAAC,GAAG,GAAE,KAAK,KAAK,MAAI,CAAC,EAAE,CAAC;AAAA,UAChG;AACA,iBAAO;AAAA,QACR;AAAA;AAAA,QAGA,KAAK,iBAAiB,SAAU,gBAAgB,MAAM;AACrD,cAAI,KAAK,UAAQ,CAAC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,cAAc,CAAC,GAAG,KAAK,KAAK,KAAK,iBAAe,EAAE,GAC/F,KAAK,KAAK,SAAS,KAAG,IAAI,KAAK,KAAK,UAAU,KAAG;AAClD,mBAAQ,IAAE,GAAG,IAAE,IAAI,KAAI;AACtB,qBAAQ,IAAE,GAAG,IAAE,IAAI,KAAI;AACtB,kBAAG,QAAQ,WAAW,gBAAe;AACpC;AAAA,cACD,OAAK;AACJ,sBAAM,KAAK,OAAS,IAAE,KAAG,KAAM,KAAK,SAAU,IAAE,KAAG,EAAI,IAAI;AAC3D,wBAAQ,KAAM,EAAE,GAAE,KAAK,KAAK,GAAG,GAAG,GAAE,KAAK,KAAK,MAAI,CAAC,GAAG,GAAE,KAAK,KAAK,MAAI,CAAC,GAAG,GAAE,KAAK,KAAK,MAAI,CAAC,EAAE,CAAE;AAAA,cAChG;AAAA,YACD;AAAA,UACD;AACA,iBAAO;AAAA,QACR;AAAA;AAAA,QAGA,KAAK,kBAAkB,SAAS,gBAAe;AAC9C,cAAI,UAAU,CAAC,GAAG,MAAM,MAAM;AAC9B,cAAG,iBAAe,GAAE;AAGnB,gBAAI,WAAW,KAAK,MAAM,OAAK,iBAAe,EAAE;AAChD,qBAAQ,IAAE,GAAG,IAAE,gBAAgB,KAAI;AAAE,sBAAQ,KAAK,EAAE,GAAE,IAAE,UAAU,GAAE,IAAE,UAAU,GAAE,IAAE,UAAU,GAAE,IAAI,CAAC;AAAA,YAAG;AAAA,UAEzG,OAAK;AAGJ,gBAAI,YAAY,KAAK,MAAM,KAAK,IAAI,gBAAgB,IAAE,CAAC,CAAC,GACvD,YAAY,KAAK,MAAM,OAAK,YAAU,EAAE,GACxC,SAAS,iBAAiB,YAAU,YAAU;AAE/C,iBAAI,OAAK,GAAG,OAAK,WAAW,QAAO;AAClC,mBAAI,OAAK,GAAG,OAAK,WAAW,QAAO;AAClC,qBAAI,OAAK,GAAG,OAAK,WAAW,QAAO;AAClC,0BAAQ,KAAM,EAAE,GAAE,OAAK,WAAW,GAAE,OAAK,WAAW,GAAE,OAAK,WAAW,GAAE,IAAI,CAAE;AAAA,gBAC/E;AAAA,cACD;AAAA,YACD;AAGA,iBAAI,OAAK,GAAG,OAAK,QAAQ,QAAO;AAAE,sBAAQ,KAAK,EAAE,GAAE,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG,GAAG,GAAE,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG,GAAG,GAAE,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG,GAAG,GAAE,KAAK,MAAM,KAAK,OAAO,IAAE,GAAG,EAAE,CAAC;AAAA,YAAG;AAAA,UAEzL;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,KAAK,WAAW,SAAS,IAAG;AAE3B,cAAI,SAAS,CAAC,GAAG,MAAI,GAAG,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,CAAC,EAAE,QAAQ,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI,GAAG,GAAG;AAGtG,eAAI,IAAE,GAAG,IAAE,GAAG,QAAQ,QAAQ,KAAI;AACjC,mBAAO,CAAC,IAAI,CAAC;AACb,iBAAI,IAAE,GAAG,IAAE,IAAI,KAAI;AAClB,qBAAO,CAAC,EAAE,CAAC,IAAI,CAAC;AAChB,mBAAI,IAAE,GAAG,IAAE,IAAI,KAAI;AAClB,uBAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAE;AAAA,cACjB;AAAA,YACD;AAAA,UACD;AAGA,eAAI,IAAE,GAAG,IAAE,KAAG,GAAG,KAAI;AACpB,iBAAI,IAAE,GAAG,IAAE,KAAG,GAAG,KAAI;AAGpB,oBAAM,GAAG,MAAM,CAAC,EAAE,CAAC;AAGnB,mBAAK,GAAG,MAAM,IAAE,CAAC,EAAE,IAAE,CAAC,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,IAAE,CAAC,EAAE,CAAG,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,IAAE,CAAC,EAAE,IAAE,CAAC,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,CAAG,EAAE,IAAE,CAAC,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,CAAG,EAAE,IAAE,CAAC,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,IAAE,CAAC,EAAE,IAAE,CAAC,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,IAAE,CAAC,EAAE,CAAG,MAAI,MAAM,IAAI;AACpC,mBAAK,GAAG,MAAM,IAAE,CAAC,EAAE,IAAE,CAAC,MAAI,MAAM,IAAI;AAGpC,qBAAO,GAAG,EAAE,IAAE,CAAC,EAAE,IAAE,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AACnD,kBAAG,CAAC,IAAG;AAAE,uBAAO,GAAG,EAAE,IAAE,CAAC,EAAE,CAAG,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK;AAAA,cAAI;AAC3D,kBAAG,CAAC,IAAG;AAAE,uBAAO,GAAG,EAAE,CAAG,EAAE,IAAE,CAAC,IAAI,IAAI,KAAG,IAAI,KAAK,IAAI;AAAA,cAAI;AACzD,kBAAG,CAAC,IAAG;AAAE,uBAAO,GAAG,EAAE,CAAG,EAAE,CAAG,IAAI,IAAI,KAAG,IAAI,IAAI,KAAK;AAAA,cAAI;AAAA,YAE1D;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,KAAK,eAAe,SAAS,IAAG,MAAK;AAEpC,cAAI,QAAQ,CAAC,GAAG,MAAI,GAAG,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,CAAC,EAAE,QAAQ,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI,GAAG,GAAG;AAGrG,eAAI,IAAE,GAAG,IAAE,IAAI,KAAI;AAClB,kBAAM,CAAC,IAAI,CAAC;AACZ,iBAAI,IAAE,GAAG,IAAE,IAAI,KAAI;AAClB,oBAAM,CAAC,EAAE,CAAC,IAAE;AAAA,YACb;AAAA,UACD;AAGA,eAAI,IAAE,GAAG,IAAE,IAAI,KAAI;AAClB,iBAAI,IAAE,GAAG,IAAE,IAAI,KAAI;AAClB,oBAAM,CAAC,EAAE,CAAC,KACP,GAAG,MAAM,IAAE,CAAC,EAAE,IAAE,CAAC,MAAI,OAAO,IAAI,MAChC,GAAG,MAAM,IAAE,CAAC,EAAE,CAAC,MAAI,OAAO,IAAI,MAC9B,GAAG,MAAM,CAAC,EAAE,IAAE,CAAC,MAAI,OAAO,IAAI,MAC9B,GAAG,MAAM,CAAC,EAAE,CAAC,MAAI,OAAO,IAAI;AAAA,YAEhC;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA,QAGA,KAAK,cAAc,SAAU,GAAG,IAAI;AACnC,cAAI,OAAK;AAET,mBAAQ,IAAE,GAAE,IAAE,GAAG,SAAO,GAAG,IAAE,GAAG,QAAQ,IAAE,KAAI;AAC7C,mBACK,GAAG,CAAC,EAAE,IAAI,EAAE,MAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,KAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,IACpH,CAAC,OAAO;AAAA,UACZ;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA,QAIA,KAAK,2BAA2B;AAAA,UAC/B,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA;AAAA,UAC3D,CAAC,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAE,IAAI,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA,UAE3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAE,IAAI,CAAC,GAAG,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAE,GAAG,GAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA,UAE3D,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAE,GAAG,GAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAI,GAAG,GAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAE,IAAI,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA,UAE3D,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAE,GAAG,GAAG,GAAE,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAE,GAAG,GAAE,IAAI,CAAC,CAAC;AAAA,UAC3D,CAAC,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,GAAG,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC;AAAA;AAAA,QAC5D;AAAA;AAAA,QAIA,KAAK,WAAW,SAAU,KAAK,UAAU;AACxC,cAAI,QAAM,CAAC,GAAG,QAAM,GAAG,OAAK,GAAG,KAAG,GAAG,KAAG,GAAG,IAAI,IAAI,CAAC,EAAE,QAAQ,IAAI,IAAI,QACrE,MAAI,GAAG,eAAa,MAAM,WAAS,OAAO;AAE3C,mBAAQ,IAAE,GAAG,IAAE,GAAG,KAAI;AACrB,qBAAQ,IAAE,GAAG,IAAE,GAAG,KAAI;AACrB,kBAAK,IAAI,CAAC,EAAE,CAAC,KAAK,KAAQ,IAAI,CAAC,EAAE,CAAC,KAAK,IAAK;AAG3C,qBAAK;AAAG,qBAAK;AACb,sBAAM,KAAK,IAAI,CAAC;AAChB,sBAAM,KAAK,EAAE,SAAS,CAAC;AACvB,sBAAM,KAAK,EAAE,cAAc,CAAC,IAAG,IAAG,IAAG,EAAE;AACvC,sBAAM,KAAK,EAAE,eAAe,CAAC;AAC7B,+BAAe;AACf,uBAAK;AACL,2BAAY,IAAI,CAAC,EAAE,CAAC,KAAG;AACvB,sBAAM;AAGN,uBAAM,CAAC,cAAa;AAGnB,wBAAM,KAAK,EAAE,OAAO,IAAI,IAAI,CAAC;AAC7B,wBAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,KAAG;AACjC,wBAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,KAAG;AACjC,wBAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE;AAGxC,sBAAK,KAAG,IAAK,MAAM,KAAK,EAAE,YAAY,CAAC,GAAG;AAAE,0BAAM,KAAK,EAAE,YAAY,CAAC,IAAI,KAAG;AAAA,kBAAG;AAChF,sBAAK,KAAG,IAAK,MAAM,KAAK,EAAE,YAAY,CAAC,GAAG;AAAE,0BAAM,KAAK,EAAE,YAAY,CAAC,IAAI,KAAG;AAAA,kBAAG;AAChF,sBAAK,KAAG,IAAK,MAAM,KAAK,EAAE,YAAY,CAAC,GAAG;AAAE,0BAAM,KAAK,EAAE,YAAY,CAAC,IAAI,KAAG;AAAA,kBAAG;AAChF,sBAAK,KAAG,IAAK,MAAM,KAAK,EAAE,YAAY,CAAC,GAAG;AAAE,0BAAM,KAAK,EAAE,YAAY,CAAC,IAAI,KAAG;AAAA,kBAAG;AAGhF,8BAAY,MAAM,yBAA0B,IAAI,EAAE,EAAE,EAAE,CAAE,EAAG,GAAI;AAC/D,sBAAI,EAAE,EAAE,EAAE,IAAI,UAAU,CAAC;AAAG,wBAAM,UAAU,CAAC;AAAG,wBAAM,UAAU,CAAC;AAAG,wBAAM,UAAU,CAAC;AAGrF,sBAAK,KAAG,MAAM,MAAM,KAAK,EAAE,OAAO,CAAC,EAAE,KAAS,KAAG,MAAM,MAAM,KAAK,EAAE,OAAO,CAAC,EAAE,GAAK;AAClF,mCAAe;AAGf,wBAAI,MAAM,KAAK,EAAE,OAAO,SAAS,UAAU;AAC1C,4BAAM,IAAI;AAAA,oBACX,OAAK;AAEJ,4BAAM,KAAK,EAAE,aAAa,WAAW,OAAO;AAG5C,0BAAG,UAAS;AAEX,4BAAI,YAAY,GAAG,aAAa,CAAC,IAAG,IAAG,IAAE,GAAE,IAAE,CAAC;AAC9C,iCAAQ,YAAU,GAAG,YAAY,OAAO,aAAY;AACnD,8BAAK,CAAC,MAAM,SAAS,EAAE,cACtB,MAAM,oBAAqB,MAAM,SAAS,EAAE,aAAc,MAAM,KAAK,EAAE,WAAY,KACnF,MAAM,oBAAqB,YAAa,MAAM,SAAS,EAAE,WAAY,KACrE,MAAM,YAAa,MAAM,KAAK,EAAE,OAAO,CAAC,GAAG,MAAM,SAAS,EAAE,MAAO,GACnE;AACA,wCAAY;AACZ,yCAAa,MAAM,SAAS,EAAE;AAAA,0BAC/B;AAAA,wBACD;AAEA,8BAAM,SAAS,EAAE,aAAa,KAAM,KAAM;AAAA,sBAE3C;AAEA;AAAA,oBAED;AAAA,kBAED;AAEA;AAAA,gBAED;AAAA,cAED;AAAA,YAED;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAAA,QAEA,KAAK,sBAAsB,SAAU,YAAY,WAAW;AAC3D,iBAAW,WAAW,CAAC,IAAI,UAAU,CAAC,KAAS,WAAW,CAAC,IAAI,UAAU,CAAC,KAAS,WAAW,CAAC,IAAI,UAAU,CAAC,KAAS,WAAW,CAAC,IAAI,UAAU,CAAC;AAAA,QACnJ;AAAA;AAAA,QAGA,KAAK,gBAAgB,SAAU,QAAQ,UAAU;AAChD,cAAI,SAAS,CAAC;AACd,mBAAQ,KAAK,QAAO;AACnB,gBAAG,CAAC,OAAO,eAAe,CAAC,GAAE;AAAE;AAAA,YAAU;AACzC,mBAAO,CAAC,IAAI,MAAM,SAAU,OAAO,CAAC,GAAG,QAAS;AAAA,UACjD;AACA,iBAAO;AAAA,QACR;AAAA,QAGA,KAAK,aAAa,SAAU,OAAO,SAAS;AAC3C,cAAI,MAAM,CAAC,GAAG,QAAM,GAAG,UAAQ,GAAG,WAAS,GAAG,UAAQ,GAAG,WAAS,GAAG,OAAO;AAG5E,eAAI,QAAM,GAAG,QAAM,MAAM,QAAQ,SAAQ;AAExC,gBAAI,KAAK,IAAI,CAAC;AACd,gBAAI,KAAK,EAAE,SAAS,CAAC;AACrB,gBAAI,KAAK,EAAE,cAAc,MAAM,KAAK,EAAE;AACtC,gBAAI,KAAK,EAAE,eAAe,MAAM,KAAK,EAAE;AACvC,gBAAI,KAAK,EAAE,aAAa,MAAM,KAAK,EAAE;AACrC,oBAAQ,MAAM,KAAK,EAAE,OAAO;AAG5B,iBAAI,OAAK,GAAG,OAAK,OAAO,QAAO;AAG9B,yBAAW,OAAK,KAAG;AAAO,0BAAY,OAAK,KAAG;AAAO,yBAAW,OAAK,IAAE,SAAO;AAAO,0BAAY,OAAK,IAAE,SAAO;AAG/G,kBAAI,QAAQ,qBAAqB,MAAM,eAAgB,MAAM,KAAK,GAAG,UAAU,SAAS,MAAM,SAAS,QAAS,GAAG;AAGlH,oBAAG,IAAI,KAAK,EAAE,OAAO,SAAS,GAAE;AAC/B,sBAAI,KAAK,EAAE,OAAQ,IAAI,KAAK,EAAE,OAAO,SAAO,CAAE,EAAE,cAAc,MAAM;AAAA,oBAClE,IAAI,KAAK,EAAE,OAAQ,IAAI,KAAK,EAAE,OAAO,SAAO,CAAE,EAAE;AAAA,oBAChD,IAAI,KAAK,EAAE,OAAQ,IAAI,KAAK,EAAE,OAAO,SAAO,CAAE,EAAE;AAAA,oBAChD,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE;AAAA,oBAC1B,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE;AAAA,kBAC3B;AAAA,gBACF;AAGA,oBAAI,KAAK,EAAE,OAAO,KAAK;AAAA,kBACtB,GAAI,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE;AAAA,kBAC9B,GAAI,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE;AAAA,kBAC9B,aAAc,MAAM;AAAA,oBAClB,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE;AAAA,oBAC1B,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE;AAAA,qBACvB,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,qBAChE,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,kBACpE;AAAA,gBACF,CAAC;AAAA,cAEF;AAGA,kBAAI,KAAK,EAAE,OAAO,KAAK;AAAA,gBACtB,IAAO,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,gBACvE,IAAO,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,gBACvE,aAAc,MAAM;AAAA,mBACf,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,mBAChE,MAAM,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,mBAChE,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,QAAQ,EAAE,KAAK;AAAA,mBACpE,MAAM,KAAK,EAAE,OAAO,OAAO,EAAE,IAAI,MAAM,KAAK,EAAE,OAAO,QAAQ,EAAE,KAAK;AAAA,gBACxE;AAAA,cACF,CAAC;AAAA,YAEF;AAAA,UAED;AAEA,iBAAO;AAAA,QACR;AAAA,QAEA,KAAK,iBAAiB,SAAU,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;AACnE,iBAAY,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAChD,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAC1C,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAC1C,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAE1C,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAC1C,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAC1C,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,KAC1C,KAAK,OAAO,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE;AAAA,QAGjD;AAAA,QAEA,KAAK,eAAe,SAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,cAAI,MAAM;AACV,cAAG,KAAK,IAAG;AACV,gBAAQ,KAAK,IAAG;AAAE,oBAAM;AAAA,YAAG,WACnB,KAAK,IAAG;AAAE,oBAAM;AAAA,YAAG,OACX;AAAE,oBAAM;AAAA,YAAG;AAAA,UAC5B,WAAS,KAAK,IAAG;AAChB,gBAAQ,KAAK,IAAG;AAAE,oBAAM;AAAA,YAAG,WACnB,KAAK,IAAG;AAAE,oBAAM;AAAA,YAAG,OACX;AAAE,oBAAM;AAAA,YAAG;AAAA,UAC5B,OAAK;AACJ,gBAAQ,KAAK,IAAG;AAAE,oBAAM;AAAA,YAAG,WACnB,KAAK,IAAG;AAAE,oBAAM;AAAA,YAAG,OACX;AAAE,oBAAM;AAAA,YAAG;AAAA,UAC5B;AACA,iBAAO;AAAA,QACR;AAAA;AAAA,QAGA,KAAK,kBAAkB,SAAU,QAAQ,SAAS;AACjD,cAAI,cAAc,CAAC;AACnB,mBAAS,KAAK,QAAQ;AACrB,gBAAG,CAAC,OAAO,eAAe,CAAC,GAAE;AAAE;AAAA,YAAU;AACzC,wBAAY,CAAC,IAAI,MAAM,WAAW,OAAO,CAAC,GAAG,OAAO;AAAA,UACrD;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA,KAAK,YAAY,SAAU,MAAM,OAAO,OAAO;AAC9C,cAAI,OAAK,GAAG,UAAU,UAAU,QAAQ,MAAM,CAAC;AAC/C,cAAI,WAAW,CAAC;AAChB,cAAI,cAAc,KAAK;AACvB,cAAI,eAAe,KAAK;AACxB,cAAI,aAAa,KAAK;AAEtB,iBAAM,OAAO,KAAK,OAAO,QAAO;AAE/B,uBAAW,KAAK,OAAO,IAAI,EAAE;AAAa,uBAAW;AAAI,qBAAO,OAAK;AACrE,oBACG,KAAK,OAAO,MAAM,EAAE,gBAAgB,YAAc,KAAK,OAAO,MAAM,EAAE,gBAAgB,YAAc,aAAa,OAC/G,SAAS,KAAK,OAAO,SAAO,GAAI;AAEpC,kBAAI,KAAK,OAAO,MAAM,EAAE,gBAAc,YAAc,aAAW,IAAI;AAAE,2BAAW,KAAK,OAAO,MAAM,EAAE;AAAA,cAAa;AACjH;AAAA,YAED;AACA,gBAAG,WAAW,KAAK,OAAO,SAAO,GAAE;AAAE,uBAAS;AAAA,YAAG;AAGjD,gBAAI,WAAW,IAAI,SAAS,OAAQ,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,CAAE;AAGnF,gBAAG,SAAO,GAAE;AAAE,qBAAO;AAAA,YAAQ,OAAK;AAAE,qBAAO,KAAK,OAAO;AAAA,YAAQ;AAAA,UAEhE;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAIA,KAAK,SAAS,SAAU,MAAM,OAAO,OAAO,UAAU,QAAQ;AAE7D,cAAK,SAAO,KAAK,OAAO,UAAY,SAAO,GAAI;AAAE,mBAAO,CAAC;AAAA,UAAG;AAE5D,cAAI,aAAW,UAAU,WAAS,GAAG,YAAU,MAAM,IAAI,IAAI;AAC7D,cAAI,KAAM,SAAO;AAAW,cAAG,KAAG,GAAE;AAAE,kBAAM,KAAK,OAAO;AAAA,UAAQ;AAChE,cAAI,MAAM,KAAK,OAAO,MAAM,EAAE,IAAE,KAAK,OAAO,QAAQ,EAAE,KAAK,IAC1D,MAAM,KAAK,OAAO,MAAM,EAAE,IAAE,KAAK,OAAO,QAAQ,EAAE,KAAK;AAGxD,cAAI,QAAQ,WAAS,KAAK,KAAK,OAAO,QAAQ;AAC9C,iBAAM,QAAQ,QAAO;AACpB,iBAAK,OAAK;AAAU,gBAAG,KAAG,GAAE;AAAE,oBAAM,KAAK,OAAO;AAAA,YAAQ;AACxD,iBAAK,KAAK,OAAO,QAAQ,EAAE,IAAI,KAAK;AAAI,iBAAK,KAAK,OAAO,QAAQ,EAAE,IAAI,KAAK;AAC5E,qBAAS,KAAK,OAAO,IAAI,EAAE,IAAE,OAAK,KAAK,OAAO,IAAI,EAAE,IAAE,OAAO,KAAK,OAAO,IAAI,EAAE,IAAE,OAAK,KAAK,OAAO,IAAI,EAAE,IAAE;AAC1G,gBAAG,QAAM,OAAM;AAAC,0BAAU;AAAA,YAAM;AAChC,gBAAG,QAAM,UAAS;AAAE,2BAAW;AAAM,yBAAS;AAAA,YAAO;AACrD,oBAAQ,OAAK,KAAG,KAAK,OAAO;AAAA,UAC7B;AAEA,cAAG,WAAU;AAAE,mBAAO,CAAC,EAAE,MAAK,KAAK,IAAG,KAAK,OAAO,QAAQ,EAAE,GAAG,IAAG,KAAK,OAAO,QAAQ,EAAE,GAAG,IAAG,KAAK,OAAO,MAAM,EAAE,GAAG,IAAG,KAAK,OAAO,MAAM,EAAE,EAAE,CAAC;AAAA,UAAG;AAGlJ,cAAI,WAAW;AAAY,sBAAY;AAAM,qBAAW;AAIxD,cAAI,KAAG,WAAS,YAAU,IAAI,MAAI,IAAE,MAAI,IAAE,IAAI,KAAG,KAAG,IAAE,KAAG,GAAG,KAAG,IAAE;AACjE,cAAI,OAAO,KAAG,KAAK,OAAO,QAAQ,EAAE,IAAI,KAAG,KAAK,OAAO,MAAM,EAAE,IAAI,KAAK,OAAO,QAAQ,EAAE,KAAG,CAAC,IAC5F,OAAO,KAAG,KAAK,OAAO,QAAQ,EAAE,IAAI,KAAG,KAAK,OAAO,MAAM,EAAE,IAAI,KAAK,OAAO,QAAQ,EAAE,KAAG,CAAC;AAG1F,iBAAO,WAAS;AAChB,iBAAM,QAAQ,QAAO;AACpB,iBAAG,OAAK,YAAU;AAAI,kBAAI,IAAE,MAAI,IAAE;AAAI,iBAAG,KAAG,IAAE,KAAG;AAAG,iBAAG,IAAE;AACzD,iBAAK,KAAK,KAAK,OAAO,QAAQ,EAAE,IAAI,KAAK,MAAM,KAAK,KAAK,OAAO,MAAM,EAAE;AACxE,iBAAK,KAAK,KAAK,OAAO,QAAQ,EAAE,IAAI,KAAK,MAAM,KAAK,KAAK,OAAO,MAAM,EAAE;AAExE,qBAAS,KAAK,OAAO,IAAI,EAAE,IAAE,OAAK,KAAK,OAAO,IAAI,EAAE,IAAE,OAAO,KAAK,OAAO,IAAI,EAAE,IAAE,OAAK,KAAK,OAAO,IAAI,EAAE,IAAE;AAE1G,gBAAG,QAAM,OAAM;AAAC,0BAAU;AAAA,YAAM;AAChC,gBAAG,QAAM,UAAS;AAAE,2BAAW;AAAM,yBAAS;AAAA,YAAO;AACrD,oBAAQ,OAAK,KAAG,KAAK,OAAO;AAAA,UAC7B;AAEA,cAAG,WAAU;AAAE,mBAAO,CAAC,EAAE,MAAK,KAAK,IAAG,KAAK,OAAO,QAAQ,EAAE,GAAG,IAAG,KAAK,OAAO,QAAQ,EAAE,GAAG,IAAG,KAAK,IAAG,KAAK,IAAG,KAAK,OAAO,MAAM,EAAE,GAAG,IAAG,KAAK,OAAO,MAAM,EAAE,EAAE,CAAC;AAAA,UAAG;AAElK,cAAI,aAAa;AAGjB,iBAAO,MAAM,OAAQ,MAAM,OAAO,OAAO,UAAU,UAAW,EAAE;AAAA,YAC9D,MAAM,OAAQ,MAAM,OAAO,OAAO,YAAY,MAAO;AAAA,UAAE;AAAA,QAE1D;AAAA;AAAA,QAGA,KAAK,kBAAkB,SAAS,gBAAe,OAAM,OAAM;AAC1D,cAAI,eAAe,CAAC;AACpB,mBAAQ,KAAK,gBAAe;AAC3B,gBAAG,CAAC,eAAe,eAAe,CAAC,GAAE;AAAE;AAAA,YAAU;AACjD,yBAAa,KAAM,MAAM,UAAU,eAAe,CAAC,GAAE,OAAM,KAAK,CAAE;AAAA,UACnE;AACA,iBAAO;AAAA,QACR;AAAA,QAGA,KAAK,mBAAmB,SAAS,aAAa,OAAO,OAAM;AAC1D,cAAI,QAAQ,CAAC;AACb,mBAAQ,KAAK,aAAY;AACxB,gBAAG,CAAC,YAAY,eAAe,CAAC,GAAE;AAAE;AAAA,YAAU;AAC9C,kBAAM,CAAC,IAAI,MAAM,gBAAgB,YAAY,CAAC,GAAG,OAAO,KAAK;AAAA,UAC9D;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,KAAK,aAAa,SAAS,KAAI,QAAO;AAAE,iBAAO,CAAC,IAAI,QAAQ,MAAM;AAAA,QAAG;AAAA,QAGrE,KAAK,gBAAgB,SAAU,WAAW,MAAM,SAAS,SAAS;AAEjE,cAAI,QAAQ,UAAU,OAAO,IAAI,GAAG,MAAM,MAAM,OAAO,GAAG,MAAI,IAAI;AAGlE,cAAG,QAAQ,cAAe,IAAI,SAAS,SAAS,GAAG;AAAE,mBAAO;AAAA,UAAK;AAGjE,gBAAM,YACH,QAAQ,OAAQ,aAAW,OAAK,QAAM,UAAQ,OAAQ,MACxD,MAAM,cAAc,UAAU,QAAQ,IAAI,GAAG,OAAO,IACpD;AAGD,cAAI,QAAQ,gBAAgB,IAAI;AAC/B,mBAAO,OAAM,IAAI,SAAS,CAAC,EAAE,KAAK,QAAQ,QAAO,MAAK,IAAI,SAAS,CAAC,EAAE,KAAK,QAAQ,QAAO;AAC1F,iBAAI,OAAK,GAAG,OAAK,IAAI,SAAS,QAAQ,QAAO;AAC5C,qBAAO,IAAI,SAAS,IAAI,EAAE,OAAM,MAAK,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,MAAK,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO;AACxH,kBAAG,IAAI,SAAS,IAAI,EAAE,eAAe,IAAI,GAAE;AAC1C,uBAAO,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,MAAK,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO;AAAA,cAC3F;AAAA,YACD;AACA,mBAAO;AAAA,UACR,OAAK;AACJ,mBAAO,OAAM,MAAM,WAAY,IAAI,SAAS,CAAC,EAAE,KAAK,QAAQ,OAAO,QAAQ,WAAY,IAAG,MAAK,MAAM,WAAY,IAAI,SAAS,CAAC,EAAE,KAAK,QAAQ,OAAO,QAAQ,WAAY,IAAG;AAC5K,iBAAI,OAAK,GAAG,OAAK,IAAI,SAAS,QAAQ,QAAO;AAC5C,qBAAO,IAAI,SAAS,IAAI,EAAE,OAAM,MAAK,MAAM,WAAY,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,OAAO,QAAQ,WAAY,IAAG,MAAK,MAAM,WAAY,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,OAAO,QAAQ,WAAY,IAAG;AAC1M,kBAAG,IAAI,SAAS,IAAI,EAAE,eAAe,IAAI,GAAE;AAC1C,uBAAO,MAAM,WAAY,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,OAAO,QAAQ,WAAY,IAAG,MAAK,MAAM,WAAY,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,OAAO,QAAQ,WAAY,IAAG;AAAA,cAC7K;AAAA,YACD;AACA,mBAAO;AAAA,UACR;AAGA,mBAAS,OAAK,GAAG,OAAO,IAAI,aAAa,QAAQ,QAAO;AACvD,gBAAI,OAAO,MAAO,IAAI,aAAa,IAAI,CAAE;AAEzC,gBAAI,QAAQ,gBAAgB,IAAI;AAE/B,kBAAG,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,eAAe,IAAI,GAAE;AAC/D,uBAAO,OAAM,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,QAAO,MAAK,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,QAAO;AAAA,cAC3I,OAAK;AACJ,uBAAO,OAAM,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,QAAO,MAAK,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,QAAO;AAAA,cAC3I;AAEA,mBAAI,OAAO,KAAK,SAAS,SAAO,GAAG,QAAQ,GAAG,QAAO;AACpD,uBAAO,KAAK,SAAS,IAAI,EAAE,OAAM;AACjC,oBAAG,KAAK,SAAS,IAAI,EAAE,eAAe,IAAI,GAAE;AAC3C,yBAAO,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,MAAK,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO;AAAA,gBAC7F;AAEA,uBAAO,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,MAAK,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO;AAAA,cAC7F;AAAA,YAED,OAAK;AAEJ,kBAAG,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,eAAe,IAAI,GAAE;AAC/D,uBAAO,OAAM,MAAM,WAAY,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,KAAM,IAAG,MAAK,MAAM,WAAY,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,KAAM,IAAG;AAAA,cACnL,OAAK;AACJ,uBAAO,OAAM,MAAM,WAAY,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,KAAM,IAAG,MAAK,MAAM,WAAY,KAAK,SAAU,KAAK,SAAS,SAAO,CAAE,EAAE,KAAK,QAAQ,KAAM,IAAG;AAAA,cACnL;AAEA,mBAAI,OAAO,KAAK,SAAS,SAAO,GAAG,QAAQ,GAAG,QAAO;AACpD,uBAAO,KAAK,SAAS,IAAI,EAAE,OAAM;AACjC,oBAAG,KAAK,SAAS,IAAI,EAAE,eAAe,IAAI,GAAE;AAC3C,yBAAO,MAAM,WAAY,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,KAAM,IAAG,MAAK,MAAM,WAAY,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,KAAM,IAAG;AAAA,gBACrI;AACA,uBAAO,MAAM,WAAY,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,KAAM,IAAG,MAAK,MAAM,WAAY,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,KAAM,IAAG;AAAA,cACrI;AAAA,YAGD;AAEA,mBAAO;AAAA,UAER;AAGA,iBAAO;AAGP,cAAG,QAAQ,QAAQ,QAAQ,MAAK;AAC/B,iBAAI,OAAK,GAAG,OAAK,IAAI,SAAS,QAAQ,QAAO;AAC5C,kBAAI,IAAI,SAAS,IAAI,EAAE,eAAe,IAAI,KAAK,QAAQ,MAAM;AAC5D,uBAAO,iBAAgB,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,UAAS,QAAQ,OAAM,iCAAgC,QAAQ,OAAO,MAAK;AAC1L,uBAAO,iBAAgB,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,UAAS,QAAQ,OAAM,kCAAiC,QAAQ,OAAO,MAAK;AAC3L,uBAAO,eAAc,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,qBAAoB,QAAQ,OAAO,MAAK;AACvP,uBAAO,eAAc,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,qBAAoB,QAAQ,OAAO,MAAK;AAAA,cACxP;AACA,kBAAK,CAAC,IAAI,SAAS,IAAI,EAAE,eAAe,IAAI,KAAM,QAAQ,MAAK;AAC9D,uBAAO,iBAAgB,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,IAAI,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,UAAS,QAAQ,OAAM,kCAAiC,QAAQ,OAAO,MAAK;AAAA,cAC5L;AAAA,YACD;AAGA,qBAAS,OAAK,GAAG,OAAO,IAAI,aAAa,QAAQ,QAAO;AACvD,kBAAI,OAAO,MAAO,IAAI,aAAa,IAAI,CAAE;AACzC,mBAAI,OAAK,GAAG,OAAK,KAAK,SAAS,QAAQ,QAAO;AAC7C,oBAAI,KAAK,SAAS,IAAI,EAAE,eAAe,IAAI,KAAK,QAAQ,MAAM;AAC7D,yBAAO,iBAAgB,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,UAAS,QAAQ,OAAM,iCAAgC,QAAQ,OAAO,MAAK;AAC5L,yBAAO,iBAAgB,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,UAAS,QAAQ,OAAM,kCAAiC,QAAQ,OAAO,MAAK;AAC7L,yBAAO,eAAc,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,qBAAoB,QAAQ,OAAO,MAAK;AAC3P,yBAAO,eAAc,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,qBAAoB,QAAQ,OAAO,MAAK;AAAA,gBAC5P;AACA,oBAAK,CAAC,KAAK,SAAS,IAAI,EAAE,eAAe,IAAI,KAAM,QAAQ,MAAK;AAC/D,yBAAO,iBAAgB,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,WAAU,KAAK,SAAS,IAAI,EAAE,KAAK,QAAQ,QAAO,UAAS,QAAQ,OAAM,kCAAiC,QAAQ,OAAO,MAAK;AAAA,gBAC9L;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,iBAAO;AAAA,QAER;AAAA;AAAA,QAGA,KAAK,eAAe,SAAU,WAAW,SAAS;AAEjD,oBAAU,MAAM,aAAa,OAAO;AAEpC,cAAI,IAAI,UAAU,QAAQ,QAAQ,OAAO,IAAI,UAAU,SAAS,QAAQ;AAGxE,cAAI,SAAS,WAAW,QAAQ,UAAW,kBAAgB,IAAE,MAAI,IAAE,OAAS,YAAU,IAAE,eAAa,IAAE,QACtG,gGAA8F,MAAM,gBAAc;AAGnH,mBAAQ,OAAK,GAAG,OAAO,UAAU,OAAO,QAAQ,QAAO;AACtD,qBAAQ,OAAK,GAAG,OAAO,UAAU,OAAO,IAAI,EAAE,QAAQ,QAAO;AAG5D,kBAAI,CAAC,UAAU,OAAO,IAAI,EAAE,IAAI,EAAE,YAAY;AAC7C,0BAAU,MAAM,cAAe,WAAW,MAAM,MAAM,OAAQ;AAAA,cAC/D;AAAA,YAED;AAAA,UACD;AAGA,oBAAQ;AAER,iBAAO;AAAA,QAER;AAAA;AAAA,QAGA,KAAK,iBAAiB,SAAS,GAAE,GAAE;AAAE,iBAAO,IAAI;AAAA,QAAG;AAAA,QAGnD,KAAK,YAAY,SAAS,GAAE;AAAE,iBAAO,UAAQ,EAAE,IAAE,MAAI,EAAE,IAAE,MAAI,EAAE,IAAE,MAAI,EAAE,IAAE;AAAA,QAAK;AAAA,QAG9E,KAAK,gBAAgB,SAAS,GAAG,SAAQ;AACxC,iBAAO,eAAa,EAAE,IAAE,MAAI,EAAE,IAAE,MAAI,EAAE,IAAE,oBAAkB,EAAE,IAAE,MAAI,EAAE,IAAE,MAAI,EAAE,IAAE,sBAAoB,QAAQ,cAAY,gBAAc,EAAE,IAAE,MAAM;AAAA,QAC/I;AAAA,QAGA,KAAK,kBAAkB,SAAS,QAAO,UAAS;AAC/C,cAAI;AACJ,cAAG,UAAS;AACX,kBAAM,SAAS,eAAe,QAAQ;AACtC,gBAAG,CAAC,KAAI;AACP,oBAAM,SAAS,cAAc,KAAK;AAClC,kBAAI,KAAK;AACT,uBAAS,KAAK,YAAY,GAAG;AAAA,YAC9B;AAAA,UACD,OAAK;AACJ,kBAAM,SAAS,cAAc,KAAK;AAClC,qBAAS,KAAK,YAAY,GAAG;AAAA,UAC9B;AACA,cAAI,aAAa;AAAA,QAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,KAAK,MAAM;AAAA,UAAE,CAAC,SAAQ,SAAQ,OAAO;AAAA,UAAG,CAAC,UAAS,UAAS,UAAS,UAAS,QAAQ;AAAA,UAAG,CAAC,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAQ;AAAA,UAC1I,CAAC,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAQ;AAAA,UAAG,CAAC,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAQ;AAAA,QAAE;AAAA,QAGtM,KAAK,OAAO,SAAS,MAAK,QAAO,OAAM;AACtC,cAAI,GAAE,GAAE,GAAE,GAAE,KAAI,MAAK,MAAK,MAAK,MAAK;AAGpC,cAAI,QAAQ,EAAE,OAAM,KAAK,OAAO,QAAO,KAAK,QAAQ,MAAK,CAAC,EAAE;AAG5D,mBAAS,KAAK,MAAM,MAAM;AAAG,cAAG,SAAO,GAAE;AAAE,mBAAO;AAAA,UAAM;AAAE,cAAG,SAAO,GAAE;AAAE,qBAAS;AAAA,UAAG;AAAE,kBAAQ,KAAK,IAAK,KAAM;AAAG,cAAG,QAAM,MAAK;AAAE,oBAAQ;AAAA,UAAM;AAC/I,cAAI,SAAS,MAAM,IAAI,SAAO,CAAC;AAG/B,eAAK,IAAE,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/B,iBAAK,IAAE,GAAG,IAAI,KAAK,OAAO,KAAK;AAE9B,qBAAO;AAAG,qBAAO;AAAG,qBAAO;AAAG,qBAAO;AAAG,qBAAO;AAE/C,mBAAK,IAAI,CAAC,QAAQ,IAAI,SAAO,GAAG,KAAI;AAEnC,oBAAK,IAAE,IAAI,KAAO,IAAE,IAAI,KAAK,OAAQ;AACpC,yBAAO,IAAE,KAAK,QAAM,IAAE,KAAG;AACzB,0BAAQ,KAAK,KAAK,GAAK,IAAI,OAAO,IAAE,MAAM;AAC1C,0BAAQ,KAAK,KAAK,MAAI,CAAC,IAAI,OAAO,IAAE,MAAM;AAC1C,0BAAQ,KAAK,KAAK,MAAI,CAAC,IAAI,OAAO,IAAE,MAAM;AAC1C,0BAAQ,KAAK,KAAK,MAAI,CAAC,IAAI,OAAO,IAAE,MAAM;AAC1C,0BAAQ,OAAO,IAAE,MAAM;AAAA,gBACxB;AAAA,cACD;AAEA,qBAAO,IAAE,KAAK,QAAM,KAAG;AACvB,oBAAM,KAAK,GAAK,IAAI,KAAK,MAAM,OAAO,IAAI;AAC1C,oBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI;AAC1C,oBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI;AAC1C,oBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI;AAAA,YAE3C;AAAA,UACD;AAGA,cAAI,QAAQ,IAAI,kBAAkB,MAAM,IAAI;AAG5C,eAAK,IAAE,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/B,iBAAK,IAAE,GAAG,IAAI,KAAK,OAAO,KAAK;AAE9B,qBAAO;AAAG,qBAAO;AAAG,qBAAO;AAAG,qBAAO;AAAG,qBAAO;AAE/C,mBAAK,IAAI,CAAC,QAAQ,IAAI,SAAO,GAAG,KAAI;AAEnC,oBAAK,IAAE,IAAI,KAAO,IAAE,IAAI,KAAK,QAAS;AACrC,0BAAQ,IAAE,KAAG,KAAK,QAAM,KAAG;AAC3B,0BAAQ,MAAM,GAAK,IAAI,OAAO,IAAE,MAAM;AACtC,0BAAQ,MAAM,MAAI,CAAC,IAAI,OAAO,IAAE,MAAM;AACtC,0BAAQ,MAAM,MAAI,CAAC,IAAI,OAAO,IAAE,MAAM;AACtC,0BAAQ,MAAM,MAAI,CAAC,IAAI,OAAO,IAAE,MAAM;AACtC,0BAAQ,OAAO,IAAE,MAAM;AAAA,gBACxB;AAAA,cACD;AAEA,qBAAO,IAAE,KAAK,QAAM,KAAG;AACvB,oBAAM,KAAK,GAAK,IAAI,KAAK,MAAM,OAAO,IAAI;AAC1C,oBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI;AAC1C,oBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI;AAC1C,oBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI;AAAA,YAE3C;AAAA,UACD;AAGA,eAAK,IAAE,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/B,iBAAK,IAAE,GAAG,IAAI,KAAK,OAAO,KAAK;AAE9B,qBAAO,IAAE,KAAK,QAAM,KAAG;AAEvB,kBAAI,KAAK,IAAI,MAAM,KAAK,GAAK,IAAI,KAAK,KAAK,GAAK,CAAC,IAAI,KAAK,IAAI,MAAM,KAAK,MAAI,CAAC,IAAI,KAAK,KAAK,MAAI,CAAC,CAAC,IACjG,KAAK,IAAI,MAAM,KAAK,MAAI,CAAC,IAAI,KAAK,KAAK,MAAI,CAAC,CAAC,IAAI,KAAK,IAAI,MAAM,KAAK,MAAI,CAAC,IAAI,KAAK,KAAK,MAAI,CAAC,CAAC;AAE/F,kBAAG,IAAE,OAAM;AACV,sBAAM,KAAK,GAAK,IAAI,KAAK,KAAK,GAAK;AACnC,sBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,KAAK,MAAI,CAAC;AACnC,sBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,KAAK,MAAI,CAAC;AACnC,sBAAM,KAAK,MAAI,CAAC,IAAI,KAAK,KAAK,MAAI,CAAC;AAAA,cACpC;AAAA,YACD;AAAA,UACD;AAEA,iBAAO;AAAA,QAER;AAAA;AAAA,QAGA,KAAK,YAAY,SAAS,KAAI,UAAS,SAAQ;AAC9C,cAAI,MAAM,IAAI,MAAM;AACpB,cAAG,WAAW,QAAQ,aAAY;AAAE,gBAAI,cAAc;AAAA,UAAa;AACnE,cAAI,SAAS,WAAU;AACtB,gBAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,mBAAO,QAAQ,IAAI;AACnB,mBAAO,SAAS,IAAI;AACpB,gBAAI,UAAU,OAAO,WAAW,IAAI;AACpC,oBAAQ,UAAU,KAAI,GAAE,CAAC;AACzB,qBAAS,MAAM;AAAA,UAChB;AACA,cAAI,MAAM;AAAA,QACX;AAAA,QAGA,KAAK,aAAa,SAAS,QAAO;AACjC,cAAI,UAAU,OAAO,WAAW,IAAI;AACpC,iBAAO,QAAQ,aAAa,GAAE,GAAE,OAAO,OAAM,OAAO,MAAM;AAAA,QAC3D;AAAA,QAGA,KAAK,cAAc;AAAA,UAClB,EAAC,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,GAAE,IAAG;AAAA,UAC7F,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG;AAAA,UACrG,EAAC,GAAE,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UACjG,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG;AAAA,UAAG,EAAC,GAAE,GAAE,GAAE,KAAI,GAAE,GAAE,GAAE,IAAG;AAAA,QAClG;AAAA,QAGA,KAAK,aAAa,SAAS,QAAO,SAAQ,OAAM,UAAS;AACxD,kBAAQ,SAAO;AACf,cAAI,GAAE,GAAE,GAAE,GAAE;AAGZ,cAAI;AACJ,cAAG,UAAS;AACX,kBAAM,SAAS,eAAe,QAAQ;AACtC,gBAAG,CAAC,KAAI;AACP,oBAAM,SAAS,cAAc,KAAK;AAClC,kBAAI,KAAK;AACT,uBAAS,KAAK,YAAY,GAAG;AAAA,YAC9B;AAAA,UACD,OAAK;AACJ,kBAAM,SAAS,cAAc,KAAK;AAClC,qBAAS,KAAK,YAAY,GAAG;AAAA,UAC9B;AAGA,eAAK,KAAK,QAAQ;AACjB,gBAAG,CAAC,OAAO,eAAe,CAAC,GAAE;AAAE;AAAA,YAAU;AAGzC,gBAAE,OAAO,CAAC,EAAE,CAAC,EAAE;AAAQ,gBAAE,OAAO,CAAC,EAAE;AAGnC,gBAAI,SAAS,SAAS,cAAc,QAAQ;AAAG,mBAAO,QAAM,IAAE;AAAO,mBAAO,SAAO,IAAE;AACrF,gBAAI,UAAU,OAAO,WAAW,IAAI;AAGpC,iBAAI,IAAE,GAAG,IAAE,GAAG,KAAI;AACjB,mBAAI,IAAE,GAAG,IAAE,GAAG,KAAI;AACjB,wBAAQ,YAAY,MAAM,UAAU,QAAS,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAE,QAAQ,MAAO,CAAC;AAC7E,wBAAQ,SAAS,IAAE,OAAM,IAAE,OAAM,OAAM,KAAK;AAAA,cAC7C;AAAA,YACD;AAGA,gBAAI,YAAY,MAAM;AAAA,UACvB;AAAA,QACD;AAAA,MAID;AAGA,UAAG,OAAO,WAAW,cAAc,OAAO,KAAI;AAC7C,eAAO,WAAW;AAAE,iBAAO,IAAI,YAAY;AAAA,QAAG,CAAC;AAAA,MAChD,WAAS,OAAO,WAAW,aAAY;AACtC,eAAO,UAAU,IAAI,YAAY;AAAA,MAClC,WAAS,OAAO,SAAS,aAAY;AACpC,aAAK,cAAc,IAAI,YAAY;AAAA,MACpC,MAAM,QAAO,cAAc,IAAI,YAAY;AAAA,IAE3C,GAAG;AAAA;AAAA;",
  "names": []
}
